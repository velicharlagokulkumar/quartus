#ifndef _ALTERA_QSYS_TOP_H_
#define _ALTERA_QSYS_TOP_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'qsys_top' in
 * file './qsys_top.sopcinfo'.
 */

/*
 * This file contains macros for all modules with masters in the system and
 * all the devices connected to those masters.
 * Macro names have unique prefixes to prevent duplicate names.
 */

/*
 * Macros for device 'ocm', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'agilex_hps'.
 * The macros are prefixed with 'AGILEX_HPS_OCM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AGILEX_HPS_OCM_COMPONENT_TYPE altera_avalon_onchip_memory2
#define AGILEX_HPS_OCM_COMPONENT_NAME ocm
#define AGILEX_HPS_OCM_BASE 0x0
#define AGILEX_HPS_OCM_SPAN 262144
#define AGILEX_HPS_OCM_END 0x3ffff
#define AGILEX_HPS_OCM_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define AGILEX_HPS_OCM_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define AGILEX_HPS_OCM_CONTENTS_INFO ""
#define AGILEX_HPS_OCM_DUAL_PORT 0
#define AGILEX_HPS_OCM_GUI_RAM_BLOCK_TYPE AUTO
#define AGILEX_HPS_OCM_INIT_CONTENTS_FILE ocm_altera_avalon_onchip_memory2_inst
#define AGILEX_HPS_OCM_INIT_MEM_CONTENT 1
#define AGILEX_HPS_OCM_INSTANCE_ID NONE
#define AGILEX_HPS_OCM_NON_DEFAULT_INIT_FILE_ENABLED 0
#define AGILEX_HPS_OCM_RAM_BLOCK_TYPE AUTO
#define AGILEX_HPS_OCM_READ_DURING_WRITE_MODE DONT_CARE
#define AGILEX_HPS_OCM_SINGLE_CLOCK_OP 1
#define AGILEX_HPS_OCM_SIZE_MULTIPLE 1
#define AGILEX_HPS_OCM_SIZE_VALUE 262144
#define AGILEX_HPS_OCM_WRITABLE 1
#define AGILEX_HPS_OCM_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define AGILEX_HPS_OCM_MEMORY_INFO_GENERATE_DAT_SYM 1
#define AGILEX_HPS_OCM_MEMORY_INFO_GENERATE_HEX 1
#define AGILEX_HPS_OCM_MEMORY_INFO_HAS_BYTE_LANE 0
#define AGILEX_HPS_OCM_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define AGILEX_HPS_OCM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 128
#define AGILEX_HPS_OCM_MEMORY_INFO_MEM_INIT_FILENAME ocm_altera_avalon_onchip_memory2_inst

/*
 * Macros for device 'sw_reset_controller_0', class 'sw_reset_controller'
 * Path to the device is from the master group 'agilex_hps'.
 * The macros are prefixed with 'AGILEX_HPS_SW_RESET_CONTROLLER_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AGILEX_HPS_SW_RESET_CONTROLLER_0_COMPONENT_TYPE sw_reset_controller
#define AGILEX_HPS_SW_RESET_CONTROLLER_0_COMPONENT_NAME sw_reset_controller_0
#define AGILEX_HPS_SW_RESET_CONTROLLER_0_BASE 0x0
#define AGILEX_HPS_SW_RESET_CONTROLLER_0_SPAN 16
#define AGILEX_HPS_SW_RESET_CONTROLLER_0_END 0xf

/*
 * Macros for device 'msgdma_s2mm_csr', class 'altera_msgdma'
 * Path to the device is from the master group 'agilex_hps'.
 * The macros are prefixed with 'AGILEX_HPS_MSGDMA_S2MM_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AGILEX_HPS_MSGDMA_S2MM_CSR_COMPONENT_TYPE altera_msgdma
#define AGILEX_HPS_MSGDMA_S2MM_CSR_COMPONENT_NAME msgdma_1
#define AGILEX_HPS_MSGDMA_S2MM_CSR_BASE 0x20
#define AGILEX_HPS_MSGDMA_S2MM_CSR_SPAN 32
#define AGILEX_HPS_MSGDMA_S2MM_CSR_END 0x4001f
#define AGILEX_HPS_MSGDMA_S2MM_CSR_IRQ 3
#define AGILEX_HPS_MSGDMA_S2MM_CSR_BURST_ENABLE 1
#define AGILEX_HPS_MSGDMA_S2MM_CSR_BURST_WRAPPING_SUPPORT 0
#define AGILEX_HPS_MSGDMA_S2MM_CSR_CHANNEL_ENABLE 0
#define AGILEX_HPS_MSGDMA_S2MM_CSR_CHANNEL_ENABLE_DERIVED 0
#define AGILEX_HPS_MSGDMA_S2MM_CSR_CHANNEL_WIDTH 8
#define AGILEX_HPS_MSGDMA_S2MM_CSR_DATA_FIFO_DEPTH 4096
#define AGILEX_HPS_MSGDMA_S2MM_CSR_DATA_WIDTH 32
#define AGILEX_HPS_MSGDMA_S2MM_CSR_DESCRIPTOR_FIFO_DEPTH 8
#define AGILEX_HPS_MSGDMA_S2MM_CSR_DMA_MODE 2
#define AGILEX_HPS_MSGDMA_S2MM_CSR_ENHANCED_FEATURES 0
#define AGILEX_HPS_MSGDMA_S2MM_CSR_ERROR_ENABLE 0
#define AGILEX_HPS_MSGDMA_S2MM_CSR_ERROR_ENABLE_DERIVED 0
#define AGILEX_HPS_MSGDMA_S2MM_CSR_ERROR_WIDTH 8
#define AGILEX_HPS_MSGDMA_S2MM_CSR_MAX_BURST_COUNT 1024
#define AGILEX_HPS_MSGDMA_S2MM_CSR_MAX_BYTE 16384
#define AGILEX_HPS_MSGDMA_S2MM_CSR_MAX_STRIDE 1
#define AGILEX_HPS_MSGDMA_S2MM_CSR_PACKET_ENABLE 1
#define AGILEX_HPS_MSGDMA_S2MM_CSR_PACKET_ENABLE_DERIVED 1
#define AGILEX_HPS_MSGDMA_S2MM_CSR_PREFETCHER_ENABLE 0
#define AGILEX_HPS_MSGDMA_S2MM_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define AGILEX_HPS_MSGDMA_S2MM_CSR_RESPONSE_PORT 2
#define AGILEX_HPS_MSGDMA_S2MM_CSR_STRIDE_ENABLE 0
#define AGILEX_HPS_MSGDMA_S2MM_CSR_STRIDE_ENABLE_DERIVED 0
#define AGILEX_HPS_MSGDMA_S2MM_CSR_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'msgdma_mm2s_csr', class 'altera_msgdma'
 * Path to the device is from the master group 'agilex_hps'.
 * The macros are prefixed with 'AGILEX_HPS_MSGDMA_MM2S_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AGILEX_HPS_MSGDMA_MM2S_CSR_COMPONENT_TYPE altera_msgdma
#define AGILEX_HPS_MSGDMA_MM2S_CSR_COMPONENT_NAME msgdma_0
#define AGILEX_HPS_MSGDMA_MM2S_CSR_BASE 0x40020
#define AGILEX_HPS_MSGDMA_MM2S_CSR_SPAN 32
#define AGILEX_HPS_MSGDMA_MM2S_CSR_END 0x4003f
#define AGILEX_HPS_MSGDMA_MM2S_CSR_IRQ 2
#define AGILEX_HPS_MSGDMA_MM2S_CSR_BURST_ENABLE 1
#define AGILEX_HPS_MSGDMA_MM2S_CSR_BURST_WRAPPING_SUPPORT 0
#define AGILEX_HPS_MSGDMA_MM2S_CSR_CHANNEL_ENABLE 0
#define AGILEX_HPS_MSGDMA_MM2S_CSR_CHANNEL_ENABLE_DERIVED 0
#define AGILEX_HPS_MSGDMA_MM2S_CSR_CHANNEL_WIDTH 8
#define AGILEX_HPS_MSGDMA_MM2S_CSR_DATA_FIFO_DEPTH 4096
#define AGILEX_HPS_MSGDMA_MM2S_CSR_DATA_WIDTH 32
#define AGILEX_HPS_MSGDMA_MM2S_CSR_DESCRIPTOR_FIFO_DEPTH 8
#define AGILEX_HPS_MSGDMA_MM2S_CSR_DMA_MODE 1
#define AGILEX_HPS_MSGDMA_MM2S_CSR_ENHANCED_FEATURES 0
#define AGILEX_HPS_MSGDMA_MM2S_CSR_ERROR_ENABLE 0
#define AGILEX_HPS_MSGDMA_MM2S_CSR_ERROR_ENABLE_DERIVED 0
#define AGILEX_HPS_MSGDMA_MM2S_CSR_ERROR_WIDTH 8
#define AGILEX_HPS_MSGDMA_MM2S_CSR_MAX_BURST_COUNT 1024
#define AGILEX_HPS_MSGDMA_MM2S_CSR_MAX_BYTE 16384
#define AGILEX_HPS_MSGDMA_MM2S_CSR_MAX_STRIDE 1
#define AGILEX_HPS_MSGDMA_MM2S_CSR_PACKET_ENABLE 1
#define AGILEX_HPS_MSGDMA_MM2S_CSR_PACKET_ENABLE_DERIVED 1
#define AGILEX_HPS_MSGDMA_MM2S_CSR_PREFETCHER_ENABLE 0
#define AGILEX_HPS_MSGDMA_MM2S_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define AGILEX_HPS_MSGDMA_MM2S_CSR_RESPONSE_PORT 2
#define AGILEX_HPS_MSGDMA_MM2S_CSR_STRIDE_ENABLE 0
#define AGILEX_HPS_MSGDMA_MM2S_CSR_STRIDE_ENABLE_DERIVED 0
#define AGILEX_HPS_MSGDMA_MM2S_CSR_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'msgdma_s2mm_descriptor_slave', class 'altera_msgdma'
 * Path to the device is from the master group 'agilex_hps'.
 * The macros are prefixed with 'AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_COMPONENT_NAME msgdma_1
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_BASE 0x40
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_SPAN 16
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_END 0x4004f
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_BURST_ENABLE 1
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 4096
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_DATA_WIDTH 32
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 8
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_DMA_MODE 2
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 1024
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_MAX_BYTE 16384
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_PACKET_ENABLE 1
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 1
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define AGILEX_HPS_MSGDMA_S2MM_DESCRIPTOR_SLAVE_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'msgdma_mm2s_descriptor_slave', class 'altera_msgdma'
 * Path to the device is from the master group 'agilex_hps'.
 * The macros are prefixed with 'AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_COMPONENT_NAME msgdma_0
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_BASE 0x40050
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_SPAN 16
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_END 0x4005f
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_BURST_ENABLE 1
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 4096
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_DATA_WIDTH 32
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 8
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_DMA_MODE 1
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 1024
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_MAX_BYTE 16384
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_PACKET_ENABLE 1
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 1
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define AGILEX_HPS_MSGDMA_MM2S_DESCRIPTOR_SLAVE_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'periph_button_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'agilex_hps'.
 * The macros are prefixed with 'AGILEX_HPS_PERIPH_BUTTON_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AGILEX_HPS_PERIPH_BUTTON_PIO_COMPONENT_TYPE altera_avalon_pio
#define AGILEX_HPS_PERIPH_BUTTON_PIO_COMPONENT_NAME periph_button_pio
#define AGILEX_HPS_PERIPH_BUTTON_PIO_BASE 0x40060
#define AGILEX_HPS_PERIPH_BUTTON_PIO_SPAN 16
#define AGILEX_HPS_PERIPH_BUTTON_PIO_END 0x4006f
#define AGILEX_HPS_PERIPH_BUTTON_PIO_IRQ 1
#define AGILEX_HPS_PERIPH_BUTTON_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define AGILEX_HPS_PERIPH_BUTTON_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define AGILEX_HPS_PERIPH_BUTTON_PIO_CAPTURE 1
#define AGILEX_HPS_PERIPH_BUTTON_PIO_DATA_WIDTH 2
#define AGILEX_HPS_PERIPH_BUTTON_PIO_DO_TEST_BENCH_WIRING 0
#define AGILEX_HPS_PERIPH_BUTTON_PIO_DRIVEN_SIM_VALUE 0
#define AGILEX_HPS_PERIPH_BUTTON_PIO_EDGE_TYPE FALLING
#define AGILEX_HPS_PERIPH_BUTTON_PIO_FREQ 100000000
#define AGILEX_HPS_PERIPH_BUTTON_PIO_HAS_IN 1
#define AGILEX_HPS_PERIPH_BUTTON_PIO_HAS_OUT 0
#define AGILEX_HPS_PERIPH_BUTTON_PIO_HAS_TRI 0
#define AGILEX_HPS_PERIPH_BUTTON_PIO_IRQ_TYPE EDGE
#define AGILEX_HPS_PERIPH_BUTTON_PIO_RESET_VALUE 0

/*
 * Macros for device 'periph_dipsw_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'agilex_hps'.
 * The macros are prefixed with 'AGILEX_HPS_PERIPH_DIPSW_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AGILEX_HPS_PERIPH_DIPSW_PIO_COMPONENT_TYPE altera_avalon_pio
#define AGILEX_HPS_PERIPH_DIPSW_PIO_COMPONENT_NAME periph_dipsw_pio
#define AGILEX_HPS_PERIPH_DIPSW_PIO_BASE 0x40070
#define AGILEX_HPS_PERIPH_DIPSW_PIO_SPAN 16
#define AGILEX_HPS_PERIPH_DIPSW_PIO_END 0x4007f
#define AGILEX_HPS_PERIPH_DIPSW_PIO_IRQ 0
#define AGILEX_HPS_PERIPH_DIPSW_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define AGILEX_HPS_PERIPH_DIPSW_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define AGILEX_HPS_PERIPH_DIPSW_PIO_CAPTURE 1
#define AGILEX_HPS_PERIPH_DIPSW_PIO_DATA_WIDTH 4
#define AGILEX_HPS_PERIPH_DIPSW_PIO_DO_TEST_BENCH_WIRING 0
#define AGILEX_HPS_PERIPH_DIPSW_PIO_DRIVEN_SIM_VALUE 0
#define AGILEX_HPS_PERIPH_DIPSW_PIO_EDGE_TYPE FALLING
#define AGILEX_HPS_PERIPH_DIPSW_PIO_FREQ 100000000
#define AGILEX_HPS_PERIPH_DIPSW_PIO_HAS_IN 1
#define AGILEX_HPS_PERIPH_DIPSW_PIO_HAS_OUT 0
#define AGILEX_HPS_PERIPH_DIPSW_PIO_HAS_TRI 0
#define AGILEX_HPS_PERIPH_DIPSW_PIO_IRQ_TYPE EDGE
#define AGILEX_HPS_PERIPH_DIPSW_PIO_RESET_VALUE 0

/*
 * Macros for device 'periph_led_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'agilex_hps'.
 * The macros are prefixed with 'AGILEX_HPS_PERIPH_LED_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AGILEX_HPS_PERIPH_LED_PIO_COMPONENT_TYPE altera_avalon_pio
#define AGILEX_HPS_PERIPH_LED_PIO_COMPONENT_NAME periph_led_pio
#define AGILEX_HPS_PERIPH_LED_PIO_BASE 0x40080
#define AGILEX_HPS_PERIPH_LED_PIO_SPAN 16
#define AGILEX_HPS_PERIPH_LED_PIO_END 0x4008f
#define AGILEX_HPS_PERIPH_LED_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define AGILEX_HPS_PERIPH_LED_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define AGILEX_HPS_PERIPH_LED_PIO_CAPTURE 0
#define AGILEX_HPS_PERIPH_LED_PIO_DATA_WIDTH 3
#define AGILEX_HPS_PERIPH_LED_PIO_DO_TEST_BENCH_WIRING 0
#define AGILEX_HPS_PERIPH_LED_PIO_DRIVEN_SIM_VALUE 0
#define AGILEX_HPS_PERIPH_LED_PIO_EDGE_TYPE NONE
#define AGILEX_HPS_PERIPH_LED_PIO_FREQ 100000000
#define AGILEX_HPS_PERIPH_LED_PIO_HAS_IN 1
#define AGILEX_HPS_PERIPH_LED_PIO_HAS_OUT 1
#define AGILEX_HPS_PERIPH_LED_PIO_HAS_TRI 0
#define AGILEX_HPS_PERIPH_LED_PIO_IRQ_TYPE NONE
#define AGILEX_HPS_PERIPH_LED_PIO_RESET_VALUE 1

/*
 * Macros for device 'periph_ILC', class 'interrupt_latency_counter'
 * Path to the device is from the master group 'agilex_hps'.
 * The macros are prefixed with 'AGILEX_HPS_PERIPH_ILC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AGILEX_HPS_PERIPH_ILC_COMPONENT_TYPE interrupt_latency_counter
#define AGILEX_HPS_PERIPH_ILC_COMPONENT_NAME periph_ILC
#define AGILEX_HPS_PERIPH_ILC_BASE 0x40100
#define AGILEX_HPS_PERIPH_ILC_SPAN 256
#define AGILEX_HPS_PERIPH_ILC_END 0x401ff

/*
 * Macros for device 'sysid', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'agilex_hps'.
 * The macros are prefixed with 'AGILEX_HPS_SYSID_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AGILEX_HPS_SYSID_COMPONENT_TYPE altera_avalon_sysid_qsys
#define AGILEX_HPS_SYSID_COMPONENT_NAME sysid
#define AGILEX_HPS_SYSID_BASE 0x40200
#define AGILEX_HPS_SYSID_SPAN 8
#define AGILEX_HPS_SYSID_END 0x40207
#define AGILEX_HPS_SYSID_ID -1395275010
#define AGILEX_HPS_SYSID_TIMESTAMP 0

/*
 * Macros for device 'pl2ps_axis2l_wn_0', class 'pl2ps_axis2l_wn'
 * Path to the device is from the master group 'agilex_hps'.
 * The macros are prefixed with 'AGILEX_HPS_PL2PS_AXIS2L_WN_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AGILEX_HPS_PL2PS_AXIS2L_WN_0_COMPONENT_TYPE pl2ps_axis2l_wn
#define AGILEX_HPS_PL2PS_AXIS2L_WN_0_COMPONENT_NAME pl2ps_axis2l_wn_0
#define AGILEX_HPS_PL2PS_AXIS2L_WN_0_BASE 0x40400
#define AGILEX_HPS_PL2PS_AXIS2L_WN_0_SPAN 1024
#define AGILEX_HPS_PL2PS_AXIS2L_WN_0_END 0x407ff

/*
 * Macros for device 's2mm_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'agilex_hps'.
 * The macros are prefixed with 'AGILEX_HPS_S2MM_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AGILEX_HPS_S2MM_PIO_COMPONENT_TYPE altera_avalon_pio
#define AGILEX_HPS_S2MM_PIO_COMPONENT_NAME s2mm_pio
#define AGILEX_HPS_S2MM_PIO_BASE 0x40800
#define AGILEX_HPS_S2MM_PIO_SPAN 16
#define AGILEX_HPS_S2MM_PIO_END 0x4080f
#define AGILEX_HPS_S2MM_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define AGILEX_HPS_S2MM_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define AGILEX_HPS_S2MM_PIO_CAPTURE 0
#define AGILEX_HPS_S2MM_PIO_DATA_WIDTH 32
#define AGILEX_HPS_S2MM_PIO_DO_TEST_BENCH_WIRING 0
#define AGILEX_HPS_S2MM_PIO_DRIVEN_SIM_VALUE 0
#define AGILEX_HPS_S2MM_PIO_EDGE_TYPE NONE
#define AGILEX_HPS_S2MM_PIO_FREQ 100000000
#define AGILEX_HPS_S2MM_PIO_HAS_IN 1
#define AGILEX_HPS_S2MM_PIO_HAS_OUT 1
#define AGILEX_HPS_S2MM_PIO_HAS_TRI 0
#define AGILEX_HPS_S2MM_PIO_IRQ_TYPE NONE
#define AGILEX_HPS_S2MM_PIO_RESET_VALUE 8847495

/*
 * Macros for device 'pio_1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'agilex_hps'.
 * The macros are prefixed with 'AGILEX_HPS_PIO_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AGILEX_HPS_PIO_1_COMPONENT_TYPE altera_avalon_pio
#define AGILEX_HPS_PIO_1_COMPONENT_NAME pio_1
#define AGILEX_HPS_PIO_1_BASE 0x40810
#define AGILEX_HPS_PIO_1_SPAN 16
#define AGILEX_HPS_PIO_1_END 0x4081f
#define AGILEX_HPS_PIO_1_BIT_CLEARING_EDGE_REGISTER 0
#define AGILEX_HPS_PIO_1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define AGILEX_HPS_PIO_1_CAPTURE 0
#define AGILEX_HPS_PIO_1_DATA_WIDTH 32
#define AGILEX_HPS_PIO_1_DO_TEST_BENCH_WIRING 0
#define AGILEX_HPS_PIO_1_DRIVEN_SIM_VALUE 0
#define AGILEX_HPS_PIO_1_EDGE_TYPE NONE
#define AGILEX_HPS_PIO_1_FREQ 100000000
#define AGILEX_HPS_PIO_1_HAS_IN 1
#define AGILEX_HPS_PIO_1_HAS_OUT 1
#define AGILEX_HPS_PIO_1_HAS_TRI 0
#define AGILEX_HPS_PIO_1_IRQ_TYPE NONE
#define AGILEX_HPS_PIO_1_RESET_VALUE 8847495

/*
 * Macros for device 'mm2s_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'agilex_hps'.
 * The macros are prefixed with 'AGILEX_HPS_MM2S_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AGILEX_HPS_MM2S_PIO_COMPONENT_TYPE altera_avalon_pio
#define AGILEX_HPS_MM2S_PIO_COMPONENT_NAME mm2s_pio
#define AGILEX_HPS_MM2S_PIO_BASE 0x40820
#define AGILEX_HPS_MM2S_PIO_SPAN 16
#define AGILEX_HPS_MM2S_PIO_END 0x4082f
#define AGILEX_HPS_MM2S_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define AGILEX_HPS_MM2S_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define AGILEX_HPS_MM2S_PIO_CAPTURE 0
#define AGILEX_HPS_MM2S_PIO_DATA_WIDTH 32
#define AGILEX_HPS_MM2S_PIO_DO_TEST_BENCH_WIRING 0
#define AGILEX_HPS_MM2S_PIO_DRIVEN_SIM_VALUE 0
#define AGILEX_HPS_MM2S_PIO_EDGE_TYPE NONE
#define AGILEX_HPS_MM2S_PIO_FREQ 100000000
#define AGILEX_HPS_MM2S_PIO_HAS_IN 1
#define AGILEX_HPS_MM2S_PIO_HAS_OUT 1
#define AGILEX_HPS_MM2S_PIO_HAS_TRI 0
#define AGILEX_HPS_MM2S_PIO_IRQ_TYPE NONE
#define AGILEX_HPS_MM2S_PIO_RESET_VALUE 8847495

/*
 * Macros for device 'ocm', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'fpga_m2ocm_pb'.
 * The macros are prefixed with 'FPGA_M2OCM_PB_OCM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_M2OCM_PB_OCM_COMPONENT_TYPE altera_avalon_onchip_memory2
#define FPGA_M2OCM_PB_OCM_COMPONENT_NAME ocm
#define FPGA_M2OCM_PB_OCM_BASE 0x0
#define FPGA_M2OCM_PB_OCM_SPAN 262144
#define FPGA_M2OCM_PB_OCM_END 0x3ffff
#define FPGA_M2OCM_PB_OCM_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define FPGA_M2OCM_PB_OCM_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define FPGA_M2OCM_PB_OCM_CONTENTS_INFO ""
#define FPGA_M2OCM_PB_OCM_DUAL_PORT 0
#define FPGA_M2OCM_PB_OCM_GUI_RAM_BLOCK_TYPE AUTO
#define FPGA_M2OCM_PB_OCM_INIT_CONTENTS_FILE ocm_altera_avalon_onchip_memory2_inst
#define FPGA_M2OCM_PB_OCM_INIT_MEM_CONTENT 1
#define FPGA_M2OCM_PB_OCM_INSTANCE_ID NONE
#define FPGA_M2OCM_PB_OCM_NON_DEFAULT_INIT_FILE_ENABLED 0
#define FPGA_M2OCM_PB_OCM_RAM_BLOCK_TYPE AUTO
#define FPGA_M2OCM_PB_OCM_READ_DURING_WRITE_MODE DONT_CARE
#define FPGA_M2OCM_PB_OCM_SINGLE_CLOCK_OP 1
#define FPGA_M2OCM_PB_OCM_SIZE_MULTIPLE 1
#define FPGA_M2OCM_PB_OCM_SIZE_VALUE 262144
#define FPGA_M2OCM_PB_OCM_WRITABLE 1
#define FPGA_M2OCM_PB_OCM_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define FPGA_M2OCM_PB_OCM_MEMORY_INFO_GENERATE_DAT_SYM 1
#define FPGA_M2OCM_PB_OCM_MEMORY_INFO_GENERATE_HEX 1
#define FPGA_M2OCM_PB_OCM_MEMORY_INFO_HAS_BYTE_LANE 0
#define FPGA_M2OCM_PB_OCM_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define FPGA_M2OCM_PB_OCM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 128
#define FPGA_M2OCM_PB_OCM_MEMORY_INFO_MEM_INIT_FILENAME ocm_altera_avalon_onchip_memory2_inst

/*
 * Macros for device 'agilex_hps', class 'intel_agilex_hps'
 * Path to the device is from the master group 'mm2s_conduit_merger'.
 * The macros are prefixed with 'MM2S_CONDUIT_MERGER_AGILEX_HPS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM2S_CONDUIT_MERGER_AGILEX_HPS_COMPONENT_TYPE intel_agilex_hps
#define MM2S_CONDUIT_MERGER_AGILEX_HPS_COMPONENT_NAME agilex_hps
#define MM2S_CONDUIT_MERGER_AGILEX_HPS_BASE 0x0
#define MM2S_CONDUIT_MERGER_AGILEX_HPS_SPAN 0x0
#define MM2S_CONDUIT_MERGER_AGILEX_HPS_END 0xffffffff

/*
 * Macros for module 'msgdma_1', class 'altera_msgdma'.
 * The macros are prefixed with 'MSGDMA_1_'.
 * The prefix comes from the module name.
 */
#define MSGDMA_1_COMPONENT_TYPE altera_msgdma
#define MSGDMA_1_COMPONENT_NAME msgdma_1
#define MSGDMA_1_BURST_ENABLE 1
#define MSGDMA_1_BURST_WRAPPING_SUPPORT 0
#define MSGDMA_1_CHANNEL_ENABLE 0
#define MSGDMA_1_CHANNEL_ENABLE_DERIVED 0
#define MSGDMA_1_CHANNEL_WIDTH 8
#define MSGDMA_1_DATA_FIFO_DEPTH 4096
#define MSGDMA_1_DATA_WIDTH 64
#define MSGDMA_1_DESCRIPTOR_FIFO_DEPTH 128
#define MSGDMA_1_DMA_MODE 1
#define MSGDMA_1_ENHANCED_FEATURES 0
#define MSGDMA_1_ERROR_ENABLE 0
#define MSGDMA_1_ERROR_ENABLE_DERIVED 0
#define MSGDMA_1_ERROR_WIDTH 8
#define MSGDMA_1_MAX_BURST_COUNT 1024
#define MSGDMA_1_MAX_BYTE 2147483647
#define MSGDMA_1_MAX_STRIDE 1
#define MSGDMA_1_PACKET_ENABLE 1
#define MSGDMA_1_PACKET_ENABLE_DERIVED 1
#define MSGDMA_1_PREFETCHER_ENABLE 0
#define MSGDMA_1_PROGRAMMABLE_BURST_ENABLE 0
#define MSGDMA_1_RESPONSE_PORT 2
#define MSGDMA_1_STRIDE_ENABLE 0
#define MSGDMA_1_STRIDE_ENABLE_DERIVED 0
#define MSGDMA_1_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'rx_data_dma_merger', class 'axi_conduit_merger'
 * Path to the device is from the master group 'msgdma_1'.
 * The macros are prefixed with 'MSGDMA_1_RX_DATA_DMA_MERGER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MSGDMA_1_RX_DATA_DMA_MERGER_COMPONENT_TYPE axi_conduit_merger
#define MSGDMA_1_RX_DATA_DMA_MERGER_COMPONENT_NAME rx_data_dma_merger
#define MSGDMA_1_RX_DATA_DMA_MERGER_BASE 0x0
#define MSGDMA_1_RX_DATA_DMA_MERGER_SPAN 0x0
#define MSGDMA_1_RX_DATA_DMA_MERGER_END 0xffffffff

/*
 * Macros for module 'msgdma_mm2s', class 'altera_msgdma'.
 * The macros are prefixed with 'MSGDMA_MM2S_'.
 * The prefix comes from the module name.
 */
#define MSGDMA_MM2S_COMPONENT_TYPE altera_msgdma
#define MSGDMA_MM2S_COMPONENT_NAME msgdma_mm2s
#define MSGDMA_MM2S_BURST_ENABLE 1
#define MSGDMA_MM2S_BURST_WRAPPING_SUPPORT 0
#define MSGDMA_MM2S_CHANNEL_ENABLE 0
#define MSGDMA_MM2S_CHANNEL_ENABLE_DERIVED 0
#define MSGDMA_MM2S_CHANNEL_WIDTH 8
#define MSGDMA_MM2S_DATA_FIFO_DEPTH 4096
#define MSGDMA_MM2S_DATA_WIDTH 512
#define MSGDMA_MM2S_DESCRIPTOR_FIFO_DEPTH 8
#define MSGDMA_MM2S_DMA_MODE 1
#define MSGDMA_MM2S_ENHANCED_FEATURES 0
#define MSGDMA_MM2S_ERROR_ENABLE 0
#define MSGDMA_MM2S_ERROR_ENABLE_DERIVED 0
#define MSGDMA_MM2S_ERROR_WIDTH 8
#define MSGDMA_MM2S_MAX_BURST_COUNT 1024
#define MSGDMA_MM2S_MAX_BYTE 524288
#define MSGDMA_MM2S_MAX_STRIDE 1
#define MSGDMA_MM2S_PACKET_ENABLE 1
#define MSGDMA_MM2S_PACKET_ENABLE_DERIVED 1
#define MSGDMA_MM2S_PREFETCHER_ENABLE 0
#define MSGDMA_MM2S_PROGRAMMABLE_BURST_ENABLE 0
#define MSGDMA_MM2S_RESPONSE_PORT 2
#define MSGDMA_MM2S_STRIDE_ENABLE 0
#define MSGDMA_MM2S_STRIDE_ENABLE_DERIVED 0
#define MSGDMA_MM2S_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'mm2s_conduit_merger', class 'axi_conduit_merger'
 * Path to the device is from the master group 'msgdma_mm2s'.
 * The macros are prefixed with 'MSGDMA_MM2S_MM2S_CONDUIT_MERGER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MSGDMA_MM2S_MM2S_CONDUIT_MERGER_COMPONENT_TYPE axi_conduit_merger
#define MSGDMA_MM2S_MM2S_CONDUIT_MERGER_COMPONENT_NAME mm2s_conduit_merger
#define MSGDMA_MM2S_MM2S_CONDUIT_MERGER_BASE 0x0
#define MSGDMA_MM2S_MM2S_CONDUIT_MERGER_SPAN 0x0
#define MSGDMA_MM2S_MM2S_CONDUIT_MERGER_END 0xffffffff

/*
 * Macros for module 'msgdma_s2mm', class 'altera_msgdma'.
 * The macros are prefixed with 'MSGDMA_S2MM_'.
 * The prefix comes from the module name.
 */
#define MSGDMA_S2MM_COMPONENT_TYPE altera_msgdma
#define MSGDMA_S2MM_COMPONENT_NAME msgdma_s2mm
#define MSGDMA_S2MM_BURST_ENABLE 1
#define MSGDMA_S2MM_BURST_WRAPPING_SUPPORT 0
#define MSGDMA_S2MM_CHANNEL_ENABLE 0
#define MSGDMA_S2MM_CHANNEL_ENABLE_DERIVED 0
#define MSGDMA_S2MM_CHANNEL_WIDTH 8
#define MSGDMA_S2MM_DATA_FIFO_DEPTH 4096
#define MSGDMA_S2MM_DATA_WIDTH 512
#define MSGDMA_S2MM_DESCRIPTOR_FIFO_DEPTH 8
#define MSGDMA_S2MM_DMA_MODE 2
#define MSGDMA_S2MM_ENHANCED_FEATURES 0
#define MSGDMA_S2MM_ERROR_ENABLE 0
#define MSGDMA_S2MM_ERROR_ENABLE_DERIVED 0
#define MSGDMA_S2MM_ERROR_WIDTH 8
#define MSGDMA_S2MM_MAX_BURST_COUNT 1024
#define MSGDMA_S2MM_MAX_BYTE 536870912
#define MSGDMA_S2MM_MAX_STRIDE 1
#define MSGDMA_S2MM_PACKET_ENABLE 0
#define MSGDMA_S2MM_PACKET_ENABLE_DERIVED 0
#define MSGDMA_S2MM_PREFETCHER_ENABLE 0
#define MSGDMA_S2MM_PROGRAMMABLE_BURST_ENABLE 0
#define MSGDMA_S2MM_RESPONSE_PORT 2
#define MSGDMA_S2MM_STRIDE_ENABLE 0
#define MSGDMA_S2MM_STRIDE_ENABLE_DERIVED 0
#define MSGDMA_S2MM_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 's2mm_conduit_merger', class 'axi_conduit_merger'
 * Path to the device is from the master group 'msgdma_s2mm'.
 * The macros are prefixed with 'MSGDMA_S2MM_S2MM_CONDUIT_MERGER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MSGDMA_S2MM_S2MM_CONDUIT_MERGER_COMPONENT_TYPE axi_conduit_merger
#define MSGDMA_S2MM_S2MM_CONDUIT_MERGER_COMPONENT_NAME s2mm_conduit_merger
#define MSGDMA_S2MM_S2MM_CONDUIT_MERGER_BASE 0x0
#define MSGDMA_S2MM_S2MM_CONDUIT_MERGER_SPAN 0x0
#define MSGDMA_S2MM_S2MM_CONDUIT_MERGER_END 0xffffffff

/*
 * Macros for device 'agilex_hps', class 'intel_agilex_hps'
 * Path to the device is from the master group 'rx_data_dma_merger'.
 * The macros are prefixed with 'RX_DATA_DMA_MERGER_AGILEX_HPS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define RX_DATA_DMA_MERGER_AGILEX_HPS_COMPONENT_TYPE intel_agilex_hps
#define RX_DATA_DMA_MERGER_AGILEX_HPS_COMPONENT_NAME agilex_hps
#define RX_DATA_DMA_MERGER_AGILEX_HPS_BASE 0x0
#define RX_DATA_DMA_MERGER_AGILEX_HPS_SPAN 0x0
#define RX_DATA_DMA_MERGER_AGILEX_HPS_END 0xffffffff

/*
 * Macros for device 'agilex_hps', class 'intel_agilex_hps'
 * Path to the device is from the master group 's2mm_conduit_merger'.
 * The macros are prefixed with 'S2MM_CONDUIT_MERGER_AGILEX_HPS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define S2MM_CONDUIT_MERGER_AGILEX_HPS_COMPONENT_TYPE intel_agilex_hps
#define S2MM_CONDUIT_MERGER_AGILEX_HPS_COMPONENT_NAME agilex_hps
#define S2MM_CONDUIT_MERGER_AGILEX_HPS_BASE 0x0
#define S2MM_CONDUIT_MERGER_AGILEX_HPS_SPAN 0x0
#define S2MM_CONDUIT_MERGER_AGILEX_HPS_END 0xffffffff

/*
 * Macros for device 'ocm', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'jtg_mst_fpga_m_master'.
 * The macros are prefixed with 'JTG_MST_FPGA_M_MASTER_OCM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define JTG_MST_FPGA_M_MASTER_OCM_COMPONENT_TYPE altera_avalon_onchip_memory2
#define JTG_MST_FPGA_M_MASTER_OCM_COMPONENT_NAME ocm
#define JTG_MST_FPGA_M_MASTER_OCM_BASE 0x0
#define JTG_MST_FPGA_M_MASTER_OCM_SPAN 262144
#define JTG_MST_FPGA_M_MASTER_OCM_END 0x3ffff
#define JTG_MST_FPGA_M_MASTER_OCM_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define JTG_MST_FPGA_M_MASTER_OCM_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define JTG_MST_FPGA_M_MASTER_OCM_CONTENTS_INFO ""
#define JTG_MST_FPGA_M_MASTER_OCM_DUAL_PORT 0
#define JTG_MST_FPGA_M_MASTER_OCM_GUI_RAM_BLOCK_TYPE AUTO
#define JTG_MST_FPGA_M_MASTER_OCM_INIT_CONTENTS_FILE ocm_altera_avalon_onchip_memory2_inst
#define JTG_MST_FPGA_M_MASTER_OCM_INIT_MEM_CONTENT 1
#define JTG_MST_FPGA_M_MASTER_OCM_INSTANCE_ID NONE
#define JTG_MST_FPGA_M_MASTER_OCM_NON_DEFAULT_INIT_FILE_ENABLED 0
#define JTG_MST_FPGA_M_MASTER_OCM_RAM_BLOCK_TYPE AUTO
#define JTG_MST_FPGA_M_MASTER_OCM_READ_DURING_WRITE_MODE DONT_CARE
#define JTG_MST_FPGA_M_MASTER_OCM_SINGLE_CLOCK_OP 1
#define JTG_MST_FPGA_M_MASTER_OCM_SIZE_MULTIPLE 1
#define JTG_MST_FPGA_M_MASTER_OCM_SIZE_VALUE 262144
#define JTG_MST_FPGA_M_MASTER_OCM_WRITABLE 1
#define JTG_MST_FPGA_M_MASTER_OCM_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define JTG_MST_FPGA_M_MASTER_OCM_MEMORY_INFO_GENERATE_DAT_SYM 1
#define JTG_MST_FPGA_M_MASTER_OCM_MEMORY_INFO_GENERATE_HEX 1
#define JTG_MST_FPGA_M_MASTER_OCM_MEMORY_INFO_HAS_BYTE_LANE 0
#define JTG_MST_FPGA_M_MASTER_OCM_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define JTG_MST_FPGA_M_MASTER_OCM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 128
#define JTG_MST_FPGA_M_MASTER_OCM_MEMORY_INFO_MEM_INIT_FILENAME ocm_altera_avalon_onchip_memory2_inst

/*
 * Macros for device 'periph_button_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'jtg_mst_fpga_m_master'.
 * The macros are prefixed with 'JTG_MST_FPGA_M_MASTER_PERIPH_BUTTON_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define JTG_MST_FPGA_M_MASTER_PERIPH_BUTTON_PIO_COMPONENT_TYPE altera_avalon_pio
#define JTG_MST_FPGA_M_MASTER_PERIPH_BUTTON_PIO_COMPONENT_NAME periph_button_pio
#define JTG_MST_FPGA_M_MASTER_PERIPH_BUTTON_PIO_BASE 0x40060
#define JTG_MST_FPGA_M_MASTER_PERIPH_BUTTON_PIO_SPAN 16
#define JTG_MST_FPGA_M_MASTER_PERIPH_BUTTON_PIO_END 0x4006f
#define JTG_MST_FPGA_M_MASTER_PERIPH_BUTTON_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define JTG_MST_FPGA_M_MASTER_PERIPH_BUTTON_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define JTG_MST_FPGA_M_MASTER_PERIPH_BUTTON_PIO_CAPTURE 1
#define JTG_MST_FPGA_M_MASTER_PERIPH_BUTTON_PIO_DATA_WIDTH 2
#define JTG_MST_FPGA_M_MASTER_PERIPH_BUTTON_PIO_DO_TEST_BENCH_WIRING 0
#define JTG_MST_FPGA_M_MASTER_PERIPH_BUTTON_PIO_DRIVEN_SIM_VALUE 0
#define JTG_MST_FPGA_M_MASTER_PERIPH_BUTTON_PIO_EDGE_TYPE FALLING
#define JTG_MST_FPGA_M_MASTER_PERIPH_BUTTON_PIO_FREQ 100000000
#define JTG_MST_FPGA_M_MASTER_PERIPH_BUTTON_PIO_HAS_IN 1
#define JTG_MST_FPGA_M_MASTER_PERIPH_BUTTON_PIO_HAS_OUT 0
#define JTG_MST_FPGA_M_MASTER_PERIPH_BUTTON_PIO_HAS_TRI 0
#define JTG_MST_FPGA_M_MASTER_PERIPH_BUTTON_PIO_IRQ_TYPE EDGE
#define JTG_MST_FPGA_M_MASTER_PERIPH_BUTTON_PIO_RESET_VALUE 0

/*
 * Macros for device 'periph_dipsw_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'jtg_mst_fpga_m_master'.
 * The macros are prefixed with 'JTG_MST_FPGA_M_MASTER_PERIPH_DIPSW_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define JTG_MST_FPGA_M_MASTER_PERIPH_DIPSW_PIO_COMPONENT_TYPE altera_avalon_pio
#define JTG_MST_FPGA_M_MASTER_PERIPH_DIPSW_PIO_COMPONENT_NAME periph_dipsw_pio
#define JTG_MST_FPGA_M_MASTER_PERIPH_DIPSW_PIO_BASE 0x40070
#define JTG_MST_FPGA_M_MASTER_PERIPH_DIPSW_PIO_SPAN 16
#define JTG_MST_FPGA_M_MASTER_PERIPH_DIPSW_PIO_END 0x4007f
#define JTG_MST_FPGA_M_MASTER_PERIPH_DIPSW_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define JTG_MST_FPGA_M_MASTER_PERIPH_DIPSW_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define JTG_MST_FPGA_M_MASTER_PERIPH_DIPSW_PIO_CAPTURE 1
#define JTG_MST_FPGA_M_MASTER_PERIPH_DIPSW_PIO_DATA_WIDTH 4
#define JTG_MST_FPGA_M_MASTER_PERIPH_DIPSW_PIO_DO_TEST_BENCH_WIRING 0
#define JTG_MST_FPGA_M_MASTER_PERIPH_DIPSW_PIO_DRIVEN_SIM_VALUE 0
#define JTG_MST_FPGA_M_MASTER_PERIPH_DIPSW_PIO_EDGE_TYPE FALLING
#define JTG_MST_FPGA_M_MASTER_PERIPH_DIPSW_PIO_FREQ 100000000
#define JTG_MST_FPGA_M_MASTER_PERIPH_DIPSW_PIO_HAS_IN 1
#define JTG_MST_FPGA_M_MASTER_PERIPH_DIPSW_PIO_HAS_OUT 0
#define JTG_MST_FPGA_M_MASTER_PERIPH_DIPSW_PIO_HAS_TRI 0
#define JTG_MST_FPGA_M_MASTER_PERIPH_DIPSW_PIO_IRQ_TYPE EDGE
#define JTG_MST_FPGA_M_MASTER_PERIPH_DIPSW_PIO_RESET_VALUE 0

/*
 * Macros for device 'periph_led_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'jtg_mst_fpga_m_master'.
 * The macros are prefixed with 'JTG_MST_FPGA_M_MASTER_PERIPH_LED_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define JTG_MST_FPGA_M_MASTER_PERIPH_LED_PIO_COMPONENT_TYPE altera_avalon_pio
#define JTG_MST_FPGA_M_MASTER_PERIPH_LED_PIO_COMPONENT_NAME periph_led_pio
#define JTG_MST_FPGA_M_MASTER_PERIPH_LED_PIO_BASE 0x40080
#define JTG_MST_FPGA_M_MASTER_PERIPH_LED_PIO_SPAN 16
#define JTG_MST_FPGA_M_MASTER_PERIPH_LED_PIO_END 0x4008f
#define JTG_MST_FPGA_M_MASTER_PERIPH_LED_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define JTG_MST_FPGA_M_MASTER_PERIPH_LED_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define JTG_MST_FPGA_M_MASTER_PERIPH_LED_PIO_CAPTURE 0
#define JTG_MST_FPGA_M_MASTER_PERIPH_LED_PIO_DATA_WIDTH 3
#define JTG_MST_FPGA_M_MASTER_PERIPH_LED_PIO_DO_TEST_BENCH_WIRING 0
#define JTG_MST_FPGA_M_MASTER_PERIPH_LED_PIO_DRIVEN_SIM_VALUE 0
#define JTG_MST_FPGA_M_MASTER_PERIPH_LED_PIO_EDGE_TYPE NONE
#define JTG_MST_FPGA_M_MASTER_PERIPH_LED_PIO_FREQ 100000000
#define JTG_MST_FPGA_M_MASTER_PERIPH_LED_PIO_HAS_IN 1
#define JTG_MST_FPGA_M_MASTER_PERIPH_LED_PIO_HAS_OUT 1
#define JTG_MST_FPGA_M_MASTER_PERIPH_LED_PIO_HAS_TRI 0
#define JTG_MST_FPGA_M_MASTER_PERIPH_LED_PIO_IRQ_TYPE NONE
#define JTG_MST_FPGA_M_MASTER_PERIPH_LED_PIO_RESET_VALUE 1

/*
 * Macros for device 'periph_ILC', class 'interrupt_latency_counter'
 * Path to the device is from the master group 'jtg_mst_fpga_m_master'.
 * The macros are prefixed with 'JTG_MST_FPGA_M_MASTER_PERIPH_ILC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define JTG_MST_FPGA_M_MASTER_PERIPH_ILC_COMPONENT_TYPE interrupt_latency_counter
#define JTG_MST_FPGA_M_MASTER_PERIPH_ILC_COMPONENT_NAME periph_ILC
#define JTG_MST_FPGA_M_MASTER_PERIPH_ILC_BASE 0x40100
#define JTG_MST_FPGA_M_MASTER_PERIPH_ILC_SPAN 256
#define JTG_MST_FPGA_M_MASTER_PERIPH_ILC_END 0x401ff

/*
 * Macros for device 'sysid', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'jtg_mst_fpga_m_master'.
 * The macros are prefixed with 'JTG_MST_FPGA_M_MASTER_SYSID_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define JTG_MST_FPGA_M_MASTER_SYSID_COMPONENT_TYPE altera_avalon_sysid_qsys
#define JTG_MST_FPGA_M_MASTER_SYSID_COMPONENT_NAME sysid
#define JTG_MST_FPGA_M_MASTER_SYSID_BASE 0x40200
#define JTG_MST_FPGA_M_MASTER_SYSID_SPAN 8
#define JTG_MST_FPGA_M_MASTER_SYSID_END 0x40207
#define JTG_MST_FPGA_M_MASTER_SYSID_ID -1395275010
#define JTG_MST_FPGA_M_MASTER_SYSID_TIMESTAMP 0

/*
 * Macros for device 'agilex_hps', class 'intel_agilex_hps'
 * Path to the device is from the master group 'jtg_mst_hps_m_master'.
 * The macros are prefixed with 'JTG_MST_HPS_M_MASTER_AGILEX_HPS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define JTG_MST_HPS_M_MASTER_AGILEX_HPS_COMPONENT_TYPE intel_agilex_hps
#define JTG_MST_HPS_M_MASTER_AGILEX_HPS_COMPONENT_NAME agilex_hps
#define JTG_MST_HPS_M_MASTER_AGILEX_HPS_BASE 0x0
#define JTG_MST_HPS_M_MASTER_AGILEX_HPS_SPAN 0x0
#define JTG_MST_HPS_M_MASTER_AGILEX_HPS_END 0xffffffff

/*
 * Macros for device 'ocm', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'jtg_mst_fpga_m'.
 * The macros are prefixed with 'JTG_MST_FPGA_M_OCM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define JTG_MST_FPGA_M_OCM_COMPONENT_TYPE altera_avalon_onchip_memory2
#define JTG_MST_FPGA_M_OCM_COMPONENT_NAME ocm
#define JTG_MST_FPGA_M_OCM_BASE 0x0
#define JTG_MST_FPGA_M_OCM_SPAN 262144
#define JTG_MST_FPGA_M_OCM_END 0x3ffff
#define JTG_MST_FPGA_M_OCM_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define JTG_MST_FPGA_M_OCM_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define JTG_MST_FPGA_M_OCM_CONTENTS_INFO ""
#define JTG_MST_FPGA_M_OCM_DUAL_PORT 0
#define JTG_MST_FPGA_M_OCM_GUI_RAM_BLOCK_TYPE AUTO
#define JTG_MST_FPGA_M_OCM_INIT_CONTENTS_FILE ocm_altera_avalon_onchip_memory2_inst
#define JTG_MST_FPGA_M_OCM_INIT_MEM_CONTENT 1
#define JTG_MST_FPGA_M_OCM_INSTANCE_ID NONE
#define JTG_MST_FPGA_M_OCM_NON_DEFAULT_INIT_FILE_ENABLED 0
#define JTG_MST_FPGA_M_OCM_RAM_BLOCK_TYPE AUTO
#define JTG_MST_FPGA_M_OCM_READ_DURING_WRITE_MODE DONT_CARE
#define JTG_MST_FPGA_M_OCM_SINGLE_CLOCK_OP 1
#define JTG_MST_FPGA_M_OCM_SIZE_MULTIPLE 1
#define JTG_MST_FPGA_M_OCM_SIZE_VALUE 262144
#define JTG_MST_FPGA_M_OCM_WRITABLE 1
#define JTG_MST_FPGA_M_OCM_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define JTG_MST_FPGA_M_OCM_MEMORY_INFO_GENERATE_DAT_SYM 1
#define JTG_MST_FPGA_M_OCM_MEMORY_INFO_GENERATE_HEX 1
#define JTG_MST_FPGA_M_OCM_MEMORY_INFO_HAS_BYTE_LANE 0
#define JTG_MST_FPGA_M_OCM_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define JTG_MST_FPGA_M_OCM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 128
#define JTG_MST_FPGA_M_OCM_MEMORY_INFO_MEM_INIT_FILENAME ocm_altera_avalon_onchip_memory2_inst

/*
 * Macros for device 'periph_button_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'jtg_mst_fpga_m'.
 * The macros are prefixed with 'JTG_MST_FPGA_M_PERIPH_BUTTON_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define JTG_MST_FPGA_M_PERIPH_BUTTON_PIO_COMPONENT_TYPE altera_avalon_pio
#define JTG_MST_FPGA_M_PERIPH_BUTTON_PIO_COMPONENT_NAME periph_button_pio
#define JTG_MST_FPGA_M_PERIPH_BUTTON_PIO_BASE 0x40060
#define JTG_MST_FPGA_M_PERIPH_BUTTON_PIO_SPAN 16
#define JTG_MST_FPGA_M_PERIPH_BUTTON_PIO_END 0x4006f
#define JTG_MST_FPGA_M_PERIPH_BUTTON_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define JTG_MST_FPGA_M_PERIPH_BUTTON_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define JTG_MST_FPGA_M_PERIPH_BUTTON_PIO_CAPTURE 1
#define JTG_MST_FPGA_M_PERIPH_BUTTON_PIO_DATA_WIDTH 2
#define JTG_MST_FPGA_M_PERIPH_BUTTON_PIO_DO_TEST_BENCH_WIRING 0
#define JTG_MST_FPGA_M_PERIPH_BUTTON_PIO_DRIVEN_SIM_VALUE 0
#define JTG_MST_FPGA_M_PERIPH_BUTTON_PIO_EDGE_TYPE FALLING
#define JTG_MST_FPGA_M_PERIPH_BUTTON_PIO_FREQ 100000000
#define JTG_MST_FPGA_M_PERIPH_BUTTON_PIO_HAS_IN 1
#define JTG_MST_FPGA_M_PERIPH_BUTTON_PIO_HAS_OUT 0
#define JTG_MST_FPGA_M_PERIPH_BUTTON_PIO_HAS_TRI 0
#define JTG_MST_FPGA_M_PERIPH_BUTTON_PIO_IRQ_TYPE EDGE
#define JTG_MST_FPGA_M_PERIPH_BUTTON_PIO_RESET_VALUE 0

/*
 * Macros for device 'periph_dipsw_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'jtg_mst_fpga_m'.
 * The macros are prefixed with 'JTG_MST_FPGA_M_PERIPH_DIPSW_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define JTG_MST_FPGA_M_PERIPH_DIPSW_PIO_COMPONENT_TYPE altera_avalon_pio
#define JTG_MST_FPGA_M_PERIPH_DIPSW_PIO_COMPONENT_NAME periph_dipsw_pio
#define JTG_MST_FPGA_M_PERIPH_DIPSW_PIO_BASE 0x40070
#define JTG_MST_FPGA_M_PERIPH_DIPSW_PIO_SPAN 16
#define JTG_MST_FPGA_M_PERIPH_DIPSW_PIO_END 0x4007f
#define JTG_MST_FPGA_M_PERIPH_DIPSW_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define JTG_MST_FPGA_M_PERIPH_DIPSW_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define JTG_MST_FPGA_M_PERIPH_DIPSW_PIO_CAPTURE 1
#define JTG_MST_FPGA_M_PERIPH_DIPSW_PIO_DATA_WIDTH 4
#define JTG_MST_FPGA_M_PERIPH_DIPSW_PIO_DO_TEST_BENCH_WIRING 0
#define JTG_MST_FPGA_M_PERIPH_DIPSW_PIO_DRIVEN_SIM_VALUE 0
#define JTG_MST_FPGA_M_PERIPH_DIPSW_PIO_EDGE_TYPE FALLING
#define JTG_MST_FPGA_M_PERIPH_DIPSW_PIO_FREQ 100000000
#define JTG_MST_FPGA_M_PERIPH_DIPSW_PIO_HAS_IN 1
#define JTG_MST_FPGA_M_PERIPH_DIPSW_PIO_HAS_OUT 0
#define JTG_MST_FPGA_M_PERIPH_DIPSW_PIO_HAS_TRI 0
#define JTG_MST_FPGA_M_PERIPH_DIPSW_PIO_IRQ_TYPE EDGE
#define JTG_MST_FPGA_M_PERIPH_DIPSW_PIO_RESET_VALUE 0

/*
 * Macros for device 'periph_led_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'jtg_mst_fpga_m'.
 * The macros are prefixed with 'JTG_MST_FPGA_M_PERIPH_LED_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define JTG_MST_FPGA_M_PERIPH_LED_PIO_COMPONENT_TYPE altera_avalon_pio
#define JTG_MST_FPGA_M_PERIPH_LED_PIO_COMPONENT_NAME periph_led_pio
#define JTG_MST_FPGA_M_PERIPH_LED_PIO_BASE 0x40080
#define JTG_MST_FPGA_M_PERIPH_LED_PIO_SPAN 16
#define JTG_MST_FPGA_M_PERIPH_LED_PIO_END 0x4008f
#define JTG_MST_FPGA_M_PERIPH_LED_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define JTG_MST_FPGA_M_PERIPH_LED_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define JTG_MST_FPGA_M_PERIPH_LED_PIO_CAPTURE 0
#define JTG_MST_FPGA_M_PERIPH_LED_PIO_DATA_WIDTH 3
#define JTG_MST_FPGA_M_PERIPH_LED_PIO_DO_TEST_BENCH_WIRING 0
#define JTG_MST_FPGA_M_PERIPH_LED_PIO_DRIVEN_SIM_VALUE 0
#define JTG_MST_FPGA_M_PERIPH_LED_PIO_EDGE_TYPE NONE
#define JTG_MST_FPGA_M_PERIPH_LED_PIO_FREQ 100000000
#define JTG_MST_FPGA_M_PERIPH_LED_PIO_HAS_IN 1
#define JTG_MST_FPGA_M_PERIPH_LED_PIO_HAS_OUT 1
#define JTG_MST_FPGA_M_PERIPH_LED_PIO_HAS_TRI 0
#define JTG_MST_FPGA_M_PERIPH_LED_PIO_IRQ_TYPE NONE
#define JTG_MST_FPGA_M_PERIPH_LED_PIO_RESET_VALUE 1

/*
 * Macros for device 'periph_ILC', class 'interrupt_latency_counter'
 * Path to the device is from the master group 'jtg_mst_fpga_m'.
 * The macros are prefixed with 'JTG_MST_FPGA_M_PERIPH_ILC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define JTG_MST_FPGA_M_PERIPH_ILC_COMPONENT_TYPE interrupt_latency_counter
#define JTG_MST_FPGA_M_PERIPH_ILC_COMPONENT_NAME periph_ILC
#define JTG_MST_FPGA_M_PERIPH_ILC_BASE 0x40100
#define JTG_MST_FPGA_M_PERIPH_ILC_SPAN 256
#define JTG_MST_FPGA_M_PERIPH_ILC_END 0x401ff

/*
 * Macros for device 'sysid', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'jtg_mst_fpga_m'.
 * The macros are prefixed with 'JTG_MST_FPGA_M_SYSID_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define JTG_MST_FPGA_M_SYSID_COMPONENT_TYPE altera_avalon_sysid_qsys
#define JTG_MST_FPGA_M_SYSID_COMPONENT_NAME sysid
#define JTG_MST_FPGA_M_SYSID_BASE 0x40200
#define JTG_MST_FPGA_M_SYSID_SPAN 8
#define JTG_MST_FPGA_M_SYSID_END 0x40207
#define JTG_MST_FPGA_M_SYSID_ID -1395275010
#define JTG_MST_FPGA_M_SYSID_TIMESTAMP 0

/*
 * Macros for device 'agilex_hps', class 'intel_agilex_hps'
 * Path to the device is from the master group 'jtg_mst_hps_m'.
 * The macros are prefixed with 'JTG_MST_HPS_M_AGILEX_HPS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define JTG_MST_HPS_M_AGILEX_HPS_COMPONENT_TYPE intel_agilex_hps
#define JTG_MST_HPS_M_AGILEX_HPS_COMPONENT_NAME agilex_hps
#define JTG_MST_HPS_M_AGILEX_HPS_BASE 0x0
#define JTG_MST_HPS_M_AGILEX_HPS_SPAN 0x0
#define JTG_MST_HPS_M_AGILEX_HPS_END 0xffffffff

/*
 * Macros for device 'periph_button_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'periph_pb_cpu_0'.
 * The macros are prefixed with 'PERIPH_PB_CPU_0_PERIPH_BUTTON_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define PERIPH_PB_CPU_0_PERIPH_BUTTON_PIO_COMPONENT_TYPE altera_avalon_pio
#define PERIPH_PB_CPU_0_PERIPH_BUTTON_PIO_COMPONENT_NAME periph_button_pio
#define PERIPH_PB_CPU_0_PERIPH_BUTTON_PIO_BASE 0x60
#define PERIPH_PB_CPU_0_PERIPH_BUTTON_PIO_SPAN 16
#define PERIPH_PB_CPU_0_PERIPH_BUTTON_PIO_END 0x6f
#define PERIPH_PB_CPU_0_PERIPH_BUTTON_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define PERIPH_PB_CPU_0_PERIPH_BUTTON_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PERIPH_PB_CPU_0_PERIPH_BUTTON_PIO_CAPTURE 1
#define PERIPH_PB_CPU_0_PERIPH_BUTTON_PIO_DATA_WIDTH 2
#define PERIPH_PB_CPU_0_PERIPH_BUTTON_PIO_DO_TEST_BENCH_WIRING 0
#define PERIPH_PB_CPU_0_PERIPH_BUTTON_PIO_DRIVEN_SIM_VALUE 0
#define PERIPH_PB_CPU_0_PERIPH_BUTTON_PIO_EDGE_TYPE FALLING
#define PERIPH_PB_CPU_0_PERIPH_BUTTON_PIO_FREQ 100000000
#define PERIPH_PB_CPU_0_PERIPH_BUTTON_PIO_HAS_IN 1
#define PERIPH_PB_CPU_0_PERIPH_BUTTON_PIO_HAS_OUT 0
#define PERIPH_PB_CPU_0_PERIPH_BUTTON_PIO_HAS_TRI 0
#define PERIPH_PB_CPU_0_PERIPH_BUTTON_PIO_IRQ_TYPE EDGE
#define PERIPH_PB_CPU_0_PERIPH_BUTTON_PIO_RESET_VALUE 0

/*
 * Macros for device 'periph_dipsw_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'periph_pb_cpu_0'.
 * The macros are prefixed with 'PERIPH_PB_CPU_0_PERIPH_DIPSW_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define PERIPH_PB_CPU_0_PERIPH_DIPSW_PIO_COMPONENT_TYPE altera_avalon_pio
#define PERIPH_PB_CPU_0_PERIPH_DIPSW_PIO_COMPONENT_NAME periph_dipsw_pio
#define PERIPH_PB_CPU_0_PERIPH_DIPSW_PIO_BASE 0x70
#define PERIPH_PB_CPU_0_PERIPH_DIPSW_PIO_SPAN 16
#define PERIPH_PB_CPU_0_PERIPH_DIPSW_PIO_END 0x7f
#define PERIPH_PB_CPU_0_PERIPH_DIPSW_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define PERIPH_PB_CPU_0_PERIPH_DIPSW_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PERIPH_PB_CPU_0_PERIPH_DIPSW_PIO_CAPTURE 1
#define PERIPH_PB_CPU_0_PERIPH_DIPSW_PIO_DATA_WIDTH 4
#define PERIPH_PB_CPU_0_PERIPH_DIPSW_PIO_DO_TEST_BENCH_WIRING 0
#define PERIPH_PB_CPU_0_PERIPH_DIPSW_PIO_DRIVEN_SIM_VALUE 0
#define PERIPH_PB_CPU_0_PERIPH_DIPSW_PIO_EDGE_TYPE FALLING
#define PERIPH_PB_CPU_0_PERIPH_DIPSW_PIO_FREQ 100000000
#define PERIPH_PB_CPU_0_PERIPH_DIPSW_PIO_HAS_IN 1
#define PERIPH_PB_CPU_0_PERIPH_DIPSW_PIO_HAS_OUT 0
#define PERIPH_PB_CPU_0_PERIPH_DIPSW_PIO_HAS_TRI 0
#define PERIPH_PB_CPU_0_PERIPH_DIPSW_PIO_IRQ_TYPE EDGE
#define PERIPH_PB_CPU_0_PERIPH_DIPSW_PIO_RESET_VALUE 0

/*
 * Macros for device 'periph_led_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'periph_pb_cpu_0'.
 * The macros are prefixed with 'PERIPH_PB_CPU_0_PERIPH_LED_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define PERIPH_PB_CPU_0_PERIPH_LED_PIO_COMPONENT_TYPE altera_avalon_pio
#define PERIPH_PB_CPU_0_PERIPH_LED_PIO_COMPONENT_NAME periph_led_pio
#define PERIPH_PB_CPU_0_PERIPH_LED_PIO_BASE 0x80
#define PERIPH_PB_CPU_0_PERIPH_LED_PIO_SPAN 16
#define PERIPH_PB_CPU_0_PERIPH_LED_PIO_END 0x8f
#define PERIPH_PB_CPU_0_PERIPH_LED_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define PERIPH_PB_CPU_0_PERIPH_LED_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PERIPH_PB_CPU_0_PERIPH_LED_PIO_CAPTURE 0
#define PERIPH_PB_CPU_0_PERIPH_LED_PIO_DATA_WIDTH 3
#define PERIPH_PB_CPU_0_PERIPH_LED_PIO_DO_TEST_BENCH_WIRING 0
#define PERIPH_PB_CPU_0_PERIPH_LED_PIO_DRIVEN_SIM_VALUE 0
#define PERIPH_PB_CPU_0_PERIPH_LED_PIO_EDGE_TYPE NONE
#define PERIPH_PB_CPU_0_PERIPH_LED_PIO_FREQ 100000000
#define PERIPH_PB_CPU_0_PERIPH_LED_PIO_HAS_IN 1
#define PERIPH_PB_CPU_0_PERIPH_LED_PIO_HAS_OUT 1
#define PERIPH_PB_CPU_0_PERIPH_LED_PIO_HAS_TRI 0
#define PERIPH_PB_CPU_0_PERIPH_LED_PIO_IRQ_TYPE NONE
#define PERIPH_PB_CPU_0_PERIPH_LED_PIO_RESET_VALUE 1

/*
 * Macros for device 'periph_ILC', class 'interrupt_latency_counter'
 * Path to the device is from the master group 'periph_pb_cpu_0'.
 * The macros are prefixed with 'PERIPH_PB_CPU_0_PERIPH_ILC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define PERIPH_PB_CPU_0_PERIPH_ILC_COMPONENT_TYPE interrupt_latency_counter
#define PERIPH_PB_CPU_0_PERIPH_ILC_COMPONENT_NAME periph_ILC
#define PERIPH_PB_CPU_0_PERIPH_ILC_BASE 0x100
#define PERIPH_PB_CPU_0_PERIPH_ILC_SPAN 256
#define PERIPH_PB_CPU_0_PERIPH_ILC_END 0x1ff


#endif /* _ALTERA_QSYS_TOP_H_ */
