--altsyncram ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES="CARE" ADDRESS_ACLR_A="NONE" ADDRESS_ACLR_B="NONE" ADDRESS_REG_B="CLOCK1" CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" CBX_SINGLE_OUTPUT_FILE="OFF" CYCLONEII_M4K_COMPATIBILITY="ON" DEVICE_FAMILY="Agilex" INDATA_ACLR_A="NONE" LOW_POWER_MODE="AUTO" NUMWORDS_A=32 NUMWORDS_B=32 OPERATION_MODE="DUAL_PORT" OUTDATA_ACLR_A="NONE" OUTDATA_ACLR_B="NONE" OUTDATA_REG_A="UNREGISTERED" OUTDATA_REG_B="UNREGISTERED" RDCONTROL_ACLR_B="NONE" RDCONTROL_REG_B="CLOCK1" WIDTH_A=32 WIDTH_B=32 WIDTH_BYTEENA_A=1 WIDTH_BYTEENA_B=1 WIDTHAD_A=5 WIDTHAD_B=5 WRCONTROL_ACLR_A="NONE" address_a address_b clock0 clock1 clocken1 data_a q_b wren_a CARRY_CHAIN="MANUAL"
--VERSION_BEGIN 22.4 cbx_altera_syncram_nd_impl 2022:11:23:20:36:22:SC cbx_altsyncram 2022:11:23:20:36:22:SC cbx_lpm_add_sub 2022:11:23:20:36:22:SC cbx_lpm_compare 2022:11:23:20:36:22:SC cbx_lpm_decode 2022:11:23:20:36:22:SC cbx_lpm_mux 2022:11:23:20:36:22:SC cbx_mgl 2022:11:23:20:36:26:SC cbx_nadder 2022:11:23:20:36:22:SC cbx_stratix 2022:11:23:20:36:22:SC cbx_stratixii 2022:11:23:20:36:22:SC cbx_stratixiii 2022:11:23:20:36:22:SC cbx_stratixv 2022:11:23:20:36:22:SC cbx_util_mgl 2022:11:23:20:36:22:SC  VERSION_END


-- Copyright (C) 2022  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.


FUNCTION altera_syncram_impl_0ru3 (address_a[4..0], address_b[4..0], clock0, clock1, clocken1, data_a[31..0], wren_a)
RETURNS ( q_b[31..0]);

--synthesis_resources = ram_bits (AUTO) 1024 
SUBDESIGN altsyncram_k112
( 
	address_a[4..0]	:	input;
	address_b[4..0]	:	input;
	clock0	:	input;
	clock1	:	input;
	clocken1	:	input;
	data_a[31..0]	:	input;
	q_b[31..0]	:	output;
	wren_a	:	input;
) 
VARIABLE 
	altera_syncram_impl1 : altera_syncram_impl_0ru3;

BEGIN 
	altera_syncram_impl1.address_a[] = address_a[];
	altera_syncram_impl1.address_b[] = address_b[];
	altera_syncram_impl1.clock0 = clock0;
	altera_syncram_impl1.clock1 = clock1;
	altera_syncram_impl1.clocken1 = clocken1;
	altera_syncram_impl1.data_a[] = data_a[];
	altera_syncram_impl1.wren_a = wren_a;
	q_b[] = altera_syncram_impl1.q_b[];
END;
--VALID FILE
