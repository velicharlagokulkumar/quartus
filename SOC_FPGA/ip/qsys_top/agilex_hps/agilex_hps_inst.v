	agilex_hps u0 (
		.hps_emif_emif_to_hps (_connected_to_hps_emif_emif_to_hps_), //   input,  width = 4096,       hps_emif.emif_to_hps
		.hps_emif_hps_to_emif (_connected_to_hps_emif_hps_to_emif_), //  output,  width = 4096,               .hps_to_emif
		.hps_emif_emif_to_gp  (_connected_to_hps_emif_emif_to_gp_),  //   input,     width = 1,               .emif_to_gp
		.hps_emif_gp_to_emif  (_connected_to_hps_emif_gp_to_emif_),  //  output,     width = 2,               .gp_to_emif
		.EMAC0_TX_CLK         (_connected_to_EMAC0_TX_CLK_),         //  output,     width = 1,         hps_io.EMAC0_TX_CLK
		.EMAC0_TXD0           (_connected_to_EMAC0_TXD0_),           //  output,     width = 1,               .EMAC0_TXD0
		.EMAC0_TXD1           (_connected_to_EMAC0_TXD1_),           //  output,     width = 1,               .EMAC0_TXD1
		.EMAC0_TXD2           (_connected_to_EMAC0_TXD2_),           //  output,     width = 1,               .EMAC0_TXD2
		.EMAC0_TXD3           (_connected_to_EMAC0_TXD3_),           //  output,     width = 1,               .EMAC0_TXD3
		.EMAC0_RX_CTL         (_connected_to_EMAC0_RX_CTL_),         //   input,     width = 1,               .EMAC0_RX_CTL
		.EMAC0_TX_CTL         (_connected_to_EMAC0_TX_CTL_),         //  output,     width = 1,               .EMAC0_TX_CTL
		.EMAC0_RX_CLK         (_connected_to_EMAC0_RX_CLK_),         //   input,     width = 1,               .EMAC0_RX_CLK
		.EMAC0_RXD0           (_connected_to_EMAC0_RXD0_),           //   input,     width = 1,               .EMAC0_RXD0
		.EMAC0_RXD1           (_connected_to_EMAC0_RXD1_),           //   input,     width = 1,               .EMAC0_RXD1
		.EMAC0_RXD2           (_connected_to_EMAC0_RXD2_),           //   input,     width = 1,               .EMAC0_RXD2
		.EMAC0_RXD3           (_connected_to_EMAC0_RXD3_),           //   input,     width = 1,               .EMAC0_RXD3
		.EMAC0_MDIO           (_connected_to_EMAC0_MDIO_),           //   inout,     width = 1,               .EMAC0_MDIO
		.EMAC0_MDC            (_connected_to_EMAC0_MDC_),            //  output,     width = 1,               .EMAC0_MDC
		.SDMMC_CMD            (_connected_to_SDMMC_CMD_),            //   inout,     width = 1,               .SDMMC_CMD
		.SDMMC_D0             (_connected_to_SDMMC_D0_),             //   inout,     width = 1,               .SDMMC_D0
		.SDMMC_D1             (_connected_to_SDMMC_D1_),             //   inout,     width = 1,               .SDMMC_D1
		.SDMMC_D2             (_connected_to_SDMMC_D2_),             //   inout,     width = 1,               .SDMMC_D2
		.SDMMC_D3             (_connected_to_SDMMC_D3_),             //   inout,     width = 1,               .SDMMC_D3
		.SDMMC_CCLK           (_connected_to_SDMMC_CCLK_),           //  output,     width = 1,               .SDMMC_CCLK
		.USB0_DATA0           (_connected_to_USB0_DATA0_),           //   inout,     width = 1,               .USB0_DATA0
		.USB0_DATA1           (_connected_to_USB0_DATA1_),           //   inout,     width = 1,               .USB0_DATA1
		.USB0_DATA2           (_connected_to_USB0_DATA2_),           //   inout,     width = 1,               .USB0_DATA2
		.USB0_DATA3           (_connected_to_USB0_DATA3_),           //   inout,     width = 1,               .USB0_DATA3
		.USB0_DATA4           (_connected_to_USB0_DATA4_),           //   inout,     width = 1,               .USB0_DATA4
		.USB0_DATA5           (_connected_to_USB0_DATA5_),           //   inout,     width = 1,               .USB0_DATA5
		.USB0_DATA6           (_connected_to_USB0_DATA6_),           //   inout,     width = 1,               .USB0_DATA6
		.USB0_DATA7           (_connected_to_USB0_DATA7_),           //   inout,     width = 1,               .USB0_DATA7
		.USB0_CLK             (_connected_to_USB0_CLK_),             //   input,     width = 1,               .USB0_CLK
		.USB0_STP             (_connected_to_USB0_STP_),             //  output,     width = 1,               .USB0_STP
		.USB0_DIR             (_connected_to_USB0_DIR_),             //   input,     width = 1,               .USB0_DIR
		.USB0_NXT             (_connected_to_USB0_NXT_),             //   input,     width = 1,               .USB0_NXT
		.UART0_RX             (_connected_to_UART0_RX_),             //   input,     width = 1,               .UART0_RX
		.UART0_TX             (_connected_to_UART0_TX_),             //  output,     width = 1,               .UART0_TX
		.I2C1_SDA             (_connected_to_I2C1_SDA_),             //   inout,     width = 1,               .I2C1_SDA
		.I2C1_SCL             (_connected_to_I2C1_SCL_),             //   inout,     width = 1,               .I2C1_SCL
		.gpio1_io0            (_connected_to_gpio1_io0_),            //   inout,     width = 1,               .gpio1_io0
		.gpio1_io1            (_connected_to_gpio1_io1_),            //   inout,     width = 1,               .gpio1_io1
		.gpio1_io4            (_connected_to_gpio1_io4_),            //   inout,     width = 1,               .gpio1_io4
		.gpio1_io5            (_connected_to_gpio1_io5_),            //   inout,     width = 1,               .gpio1_io5
		.jtag_tck             (_connected_to_jtag_tck_),             //   input,     width = 1,               .jtag_tck
		.jtag_tms             (_connected_to_jtag_tms_),             //   input,     width = 1,               .jtag_tms
		.jtag_tdo             (_connected_to_jtag_tdo_),             //  output,     width = 1,               .jtag_tdo
		.jtag_tdi             (_connected_to_jtag_tdi_),             //   input,     width = 1,               .jtag_tdi
		.hps_osc_clk          (_connected_to_hps_osc_clk_),          //   input,     width = 1,               .hps_osc_clk
		.gpio1_io19           (_connected_to_gpio1_io19_),           //   inout,     width = 1,               .gpio1_io19
		.gpio1_io20           (_connected_to_gpio1_io20_),           //   inout,     width = 1,               .gpio1_io20
		.gpio1_io21           (_connected_to_gpio1_io21_),           //   inout,     width = 1,               .gpio1_io21
		.h2f_rst              (_connected_to_h2f_rst_),              //  output,     width = 1,      h2f_reset.reset
		.h2f_axi_clk          (_connected_to_h2f_axi_clk_),          //   input,     width = 1,  h2f_axi_clock.clk
		.h2f_axi_rst_n        (_connected_to_h2f_axi_rst_n_),        //   input,     width = 1,  h2f_axi_reset.reset_n
		.h2f_AWID             (_connected_to_h2f_AWID_),             //  output,     width = 4, h2f_axi_master.awid
		.h2f_AWADDR           (_connected_to_h2f_AWADDR_),           //  output,    width = 32,               .awaddr
		.h2f_AWLEN            (_connected_to_h2f_AWLEN_),            //  output,     width = 8,               .awlen
		.h2f_AWSIZE           (_connected_to_h2f_AWSIZE_),           //  output,     width = 3,               .awsize
		.h2f_AWBURST          (_connected_to_h2f_AWBURST_),          //  output,     width = 2,               .awburst
		.h2f_AWLOCK           (_connected_to_h2f_AWLOCK_),           //  output,     width = 1,               .awlock
		.h2f_AWCACHE          (_connected_to_h2f_AWCACHE_),          //  output,     width = 4,               .awcache
		.h2f_AWPROT           (_connected_to_h2f_AWPROT_),           //  output,     width = 3,               .awprot
		.h2f_AWVALID          (_connected_to_h2f_AWVALID_),          //  output,     width = 1,               .awvalid
		.h2f_AWREADY          (_connected_to_h2f_AWREADY_),          //   input,     width = 1,               .awready
		.h2f_WDATA            (_connected_to_h2f_WDATA_),            //  output,   width = 128,               .wdata
		.h2f_WSTRB            (_connected_to_h2f_WSTRB_),            //  output,    width = 16,               .wstrb
		.h2f_WLAST            (_connected_to_h2f_WLAST_),            //  output,     width = 1,               .wlast
		.h2f_WVALID           (_connected_to_h2f_WVALID_),           //  output,     width = 1,               .wvalid
		.h2f_WREADY           (_connected_to_h2f_WREADY_),           //   input,     width = 1,               .wready
		.h2f_BID              (_connected_to_h2f_BID_),              //   input,     width = 4,               .bid
		.h2f_BRESP            (_connected_to_h2f_BRESP_),            //   input,     width = 2,               .bresp
		.h2f_BVALID           (_connected_to_h2f_BVALID_),           //   input,     width = 1,               .bvalid
		.h2f_BREADY           (_connected_to_h2f_BREADY_),           //  output,     width = 1,               .bready
		.h2f_ARID             (_connected_to_h2f_ARID_),             //  output,     width = 4,               .arid
		.h2f_ARADDR           (_connected_to_h2f_ARADDR_),           //  output,    width = 32,               .araddr
		.h2f_ARLEN            (_connected_to_h2f_ARLEN_),            //  output,     width = 8,               .arlen
		.h2f_ARSIZE           (_connected_to_h2f_ARSIZE_),           //  output,     width = 3,               .arsize
		.h2f_ARBURST          (_connected_to_h2f_ARBURST_),          //  output,     width = 2,               .arburst
		.h2f_ARLOCK           (_connected_to_h2f_ARLOCK_),           //  output,     width = 1,               .arlock
		.h2f_ARCACHE          (_connected_to_h2f_ARCACHE_),          //  output,     width = 4,               .arcache
		.h2f_ARPROT           (_connected_to_h2f_ARPROT_),           //  output,     width = 3,               .arprot
		.h2f_ARVALID          (_connected_to_h2f_ARVALID_),          //  output,     width = 1,               .arvalid
		.h2f_ARREADY          (_connected_to_h2f_ARREADY_),          //   input,     width = 1,               .arready
		.h2f_RID              (_connected_to_h2f_RID_),              //   input,     width = 4,               .rid
		.h2f_RDATA            (_connected_to_h2f_RDATA_),            //   input,   width = 128,               .rdata
		.h2f_RRESP            (_connected_to_h2f_RRESP_),            //   input,     width = 2,               .rresp
		.h2f_RLAST            (_connected_to_h2f_RLAST_),            //   input,     width = 1,               .rlast
		.h2f_RVALID           (_connected_to_h2f_RVALID_),           //   input,     width = 1,               .rvalid
		.h2f_RREADY           (_connected_to_h2f_RREADY_)            //  output,     width = 1,               .rready
	);

