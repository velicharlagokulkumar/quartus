	qsys_top_r1 u0 (
		.agilex_hps_h2f_user0_clock_clk       (_connected_to_agilex_hps_h2f_user0_clock_clk_),       //  output,   width = 1,    agilex_hps_h2f_user0_clock.clk
		.agilex_hps_h2f_user1_clock_clk       (_connected_to_agilex_hps_h2f_user1_clock_clk_),       //  output,   width = 1,    agilex_hps_h2f_user1_clock.clk
		.hps_io_EMAC1_TX_CLK                  (_connected_to_hps_io_EMAC1_TX_CLK_),                  //  output,   width = 1,                        hps_io.EMAC1_TX_CLK
		.hps_io_EMAC1_TXD0                    (_connected_to_hps_io_EMAC1_TXD0_),                    //  output,   width = 1,                              .EMAC1_TXD0
		.hps_io_EMAC1_TXD1                    (_connected_to_hps_io_EMAC1_TXD1_),                    //  output,   width = 1,                              .EMAC1_TXD1
		.hps_io_EMAC1_TXD2                    (_connected_to_hps_io_EMAC1_TXD2_),                    //  output,   width = 1,                              .EMAC1_TXD2
		.hps_io_EMAC1_TXD3                    (_connected_to_hps_io_EMAC1_TXD3_),                    //  output,   width = 1,                              .EMAC1_TXD3
		.hps_io_EMAC1_RX_CTL                  (_connected_to_hps_io_EMAC1_RX_CTL_),                  //   input,   width = 1,                              .EMAC1_RX_CTL
		.hps_io_EMAC1_TX_CTL                  (_connected_to_hps_io_EMAC1_TX_CTL_),                  //  output,   width = 1,                              .EMAC1_TX_CTL
		.hps_io_EMAC1_RX_CLK                  (_connected_to_hps_io_EMAC1_RX_CLK_),                  //   input,   width = 1,                              .EMAC1_RX_CLK
		.hps_io_EMAC1_RXD0                    (_connected_to_hps_io_EMAC1_RXD0_),                    //   input,   width = 1,                              .EMAC1_RXD0
		.hps_io_EMAC1_RXD1                    (_connected_to_hps_io_EMAC1_RXD1_),                    //   input,   width = 1,                              .EMAC1_RXD1
		.hps_io_EMAC1_RXD2                    (_connected_to_hps_io_EMAC1_RXD2_),                    //   input,   width = 1,                              .EMAC1_RXD2
		.hps_io_EMAC1_RXD3                    (_connected_to_hps_io_EMAC1_RXD3_),                    //   input,   width = 1,                              .EMAC1_RXD3
		.hps_io_EMAC1_MDIO                    (_connected_to_hps_io_EMAC1_MDIO_),                    //   inout,   width = 1,                              .EMAC1_MDIO
		.hps_io_EMAC1_MDC                     (_connected_to_hps_io_EMAC1_MDC_),                     //  output,   width = 1,                              .EMAC1_MDC
		.hps_io_SDMMC_CMD                     (_connected_to_hps_io_SDMMC_CMD_),                     //   inout,   width = 1,                              .SDMMC_CMD
		.hps_io_SDMMC_D0                      (_connected_to_hps_io_SDMMC_D0_),                      //   inout,   width = 1,                              .SDMMC_D0
		.hps_io_SDMMC_D1                      (_connected_to_hps_io_SDMMC_D1_),                      //   inout,   width = 1,                              .SDMMC_D1
		.hps_io_SDMMC_D2                      (_connected_to_hps_io_SDMMC_D2_),                      //   inout,   width = 1,                              .SDMMC_D2
		.hps_io_SDMMC_D3                      (_connected_to_hps_io_SDMMC_D3_),                      //   inout,   width = 1,                              .SDMMC_D3
		.hps_io_SDMMC_D4                      (_connected_to_hps_io_SDMMC_D4_),                      //   inout,   width = 1,                              .SDMMC_D4
		.hps_io_SDMMC_D5                      (_connected_to_hps_io_SDMMC_D5_),                      //   inout,   width = 1,                              .SDMMC_D5
		.hps_io_SDMMC_D6                      (_connected_to_hps_io_SDMMC_D6_),                      //   inout,   width = 1,                              .SDMMC_D6
		.hps_io_SDMMC_D7                      (_connected_to_hps_io_SDMMC_D7_),                      //   inout,   width = 1,                              .SDMMC_D7
		.hps_io_SDMMC_CCLK                    (_connected_to_hps_io_SDMMC_CCLK_),                    //  output,   width = 1,                              .SDMMC_CCLK
		.hps_io_SPIM0_CLK                     (_connected_to_hps_io_SPIM0_CLK_),                     //  output,   width = 1,                              .SPIM0_CLK
		.hps_io_SPIM0_MOSI                    (_connected_to_hps_io_SPIM0_MOSI_),                    //  output,   width = 1,                              .SPIM0_MOSI
		.hps_io_SPIM0_MISO                    (_connected_to_hps_io_SPIM0_MISO_),                    //   input,   width = 1,                              .SPIM0_MISO
		.hps_io_SPIM0_SS0_N                   (_connected_to_hps_io_SPIM0_SS0_N_),                   //  output,   width = 1,                              .SPIM0_SS0_N
		.hps_io_SPIM1_CLK                     (_connected_to_hps_io_SPIM1_CLK_),                     //  output,   width = 1,                              .SPIM1_CLK
		.hps_io_SPIM1_MOSI                    (_connected_to_hps_io_SPIM1_MOSI_),                    //  output,   width = 1,                              .SPIM1_MOSI
		.hps_io_SPIM1_MISO                    (_connected_to_hps_io_SPIM1_MISO_),                    //   input,   width = 1,                              .SPIM1_MISO
		.hps_io_SPIM1_SS0_N                   (_connected_to_hps_io_SPIM1_SS0_N_),                   //  output,   width = 1,                              .SPIM1_SS0_N
		.hps_io_SPIM1_SS1_N                   (_connected_to_hps_io_SPIM1_SS1_N_),                   //  output,   width = 1,                              .SPIM1_SS1_N
		.hps_io_UART1_RX                      (_connected_to_hps_io_UART1_RX_),                      //   input,   width = 1,                              .UART1_RX
		.hps_io_UART1_TX                      (_connected_to_hps_io_UART1_TX_),                      //  output,   width = 1,                              .UART1_TX
		.hps_io_I2C1_SDA                      (_connected_to_hps_io_I2C1_SDA_),                      //   inout,   width = 1,                              .I2C1_SDA
		.hps_io_I2C1_SCL                      (_connected_to_hps_io_I2C1_SCL_),                      //   inout,   width = 1,                              .I2C1_SCL
		.hps_io_hps_osc_clk                   (_connected_to_hps_io_hps_osc_clk_),                   //   input,   width = 1,                              .hps_osc_clk
		.hps_io_gpio0_io11                    (_connected_to_hps_io_gpio0_io11_),                    //   inout,   width = 1,                              .gpio0_io11
		.hps_io_gpio0_io12                    (_connected_to_hps_io_gpio0_io12_),                    //   inout,   width = 1,                              .gpio0_io12
		.hps_io_gpio0_io13                    (_connected_to_hps_io_gpio0_io13_),                    //   inout,   width = 1,                              .gpio0_io13
		.hps_io_gpio0_io14                    (_connected_to_hps_io_gpio0_io14_),                    //   inout,   width = 1,                              .gpio0_io14
		.hps_io_gpio0_io15                    (_connected_to_hps_io_gpio0_io15_),                    //   inout,   width = 1,                              .gpio0_io15
		.hps_io_gpio0_io16                    (_connected_to_hps_io_gpio0_io16_),                    //   inout,   width = 1,                              .gpio0_io16
		.hps_io_gpio0_io17                    (_connected_to_hps_io_gpio0_io17_),                    //   inout,   width = 1,                              .gpio0_io17
		.hps_io_gpio0_io18                    (_connected_to_hps_io_gpio0_io18_),                    //   inout,   width = 1,                              .gpio0_io18
		.hps_io_gpio1_io16                    (_connected_to_hps_io_gpio1_io16_),                    //   inout,   width = 1,                              .gpio1_io16
		.hps_io_gpio1_io17                    (_connected_to_hps_io_gpio1_io17_),                    //   inout,   width = 1,                              .gpio1_io17
		.h2f_reset_reset                      (_connected_to_h2f_reset_reset_),                      //  output,   width = 1,                     h2f_reset.reset
		.f2h_irq0_irq                         (_connected_to_f2h_irq0_irq_),                         //   input,  width = 32,                      f2h_irq0.irq
		.f2h_irq1_irq                         (_connected_to_f2h_irq1_irq_),                         //   input,  width = 32,                      f2h_irq1.irq
		.clk_100_clk                          (_connected_to_clk_100_clk_),                          //   input,   width = 1,                       clk_100.clk
		.emif_hps_pll_ref_clk_clk             (_connected_to_emif_hps_pll_ref_clk_clk_),             //   input,   width = 1,          emif_hps_pll_ref_clk.clk
		.emif_hps_oct_oct_rzqin               (_connected_to_emif_hps_oct_oct_rzqin_),               //   input,   width = 1,                  emif_hps_oct.oct_rzqin
		.emif_hps_mem_mem_ck                  (_connected_to_emif_hps_mem_mem_ck_),                  //  output,   width = 1,                  emif_hps_mem.mem_ck
		.emif_hps_mem_mem_ck_n                (_connected_to_emif_hps_mem_mem_ck_n_),                //  output,   width = 1,                              .mem_ck_n
		.emif_hps_mem_mem_a                   (_connected_to_emif_hps_mem_mem_a_),                   //  output,  width = 17,                              .mem_a
		.emif_hps_mem_mem_act_n               (_connected_to_emif_hps_mem_mem_act_n_),               //  output,   width = 1,                              .mem_act_n
		.emif_hps_mem_mem_ba                  (_connected_to_emif_hps_mem_mem_ba_),                  //  output,   width = 2,                              .mem_ba
		.emif_hps_mem_mem_bg                  (_connected_to_emif_hps_mem_mem_bg_),                  //  output,   width = 1,                              .mem_bg
		.emif_hps_mem_mem_cke                 (_connected_to_emif_hps_mem_mem_cke_),                 //  output,   width = 1,                              .mem_cke
		.emif_hps_mem_mem_cs_n                (_connected_to_emif_hps_mem_mem_cs_n_),                //  output,   width = 2,                              .mem_cs_n
		.emif_hps_mem_mem_odt                 (_connected_to_emif_hps_mem_mem_odt_),                 //  output,   width = 1,                              .mem_odt
		.emif_hps_mem_mem_reset_n             (_connected_to_emif_hps_mem_mem_reset_n_),             //  output,   width = 1,                              .mem_reset_n
		.emif_hps_mem_mem_par                 (_connected_to_emif_hps_mem_mem_par_),                 //  output,   width = 1,                              .mem_par
		.emif_hps_mem_mem_alert_n             (_connected_to_emif_hps_mem_mem_alert_n_),             //   input,   width = 1,                              .mem_alert_n
		.emif_hps_mem_mem_dqs                 (_connected_to_emif_hps_mem_mem_dqs_),                 //   inout,   width = 9,                              .mem_dqs
		.emif_hps_mem_mem_dqs_n               (_connected_to_emif_hps_mem_mem_dqs_n_),               //   inout,   width = 9,                              .mem_dqs_n
		.emif_hps_mem_mem_dq                  (_connected_to_emif_hps_mem_mem_dq_),                  //   inout,  width = 72,                              .mem_dq
		.emif_hps_mem_mem_dbi_n               (_connected_to_emif_hps_mem_mem_dbi_n_),               //   inout,   width = 9,                              .mem_dbi_n
		.pio_0_external_connection_export     (_connected_to_pio_0_external_connection_export_),     //  output,   width = 2,     pio_0_external_connection.export
		.ram_controller_1_src_read_cmd_tready (_connected_to_ram_controller_1_src_read_cmd_tready_), //   input,   width = 1, ram_controller_1_src_read_cmd.tready
		.ram_controller_1_src_read_cmd_tdata  (_connected_to_ram_controller_1_src_read_cmd_tdata_),  //  output,  width = 97,                              .tdata
		.ram_controller_1_src_read_cmd_tvalid (_connected_to_ram_controller_1_src_read_cmd_tvalid_), //  output,   width = 1,                              .tvalid
		.reset_reset_n                        (_connected_to_reset_reset_n_),                        //   input,   width = 1,                         reset.reset_n
		.ninit_done_ninit_done                (_connected_to_ninit_done_ninit_done_)                 //  output,   width = 1,                    ninit_done.ninit_done
	);

