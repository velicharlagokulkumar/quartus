	component qsys_top_pattern_writer_0 is
		generic (
			ADDRESS_WIDTH          : integer := 32;
			LENGTH_WIDTH           : integer := 32;
			DATA_WIDTH             : integer := 32;
			BYTE_ENABLE_WIDTH      : integer := 4;
			BYTE_ENABLE_WIDTH_LOG2 : integer := 2;
			BURST_ENABLE           : integer := 1;
			MAX_BURST_COUNT        : integer := 2;
			BURST_WIDTH            : integer := 2;
			FIFO_DEPTH             : integer := 128;
			FIFO_DEPTH_LOG2        : integer := 7;
			BURST_REALIGN_ENABLE   : integer := 1
		);
		port (
			clk                : in  std_logic                                                  := 'X';             -- clk
			reset              : in  std_logic                                                  := 'X';             -- reset
			snk_data           : in  std_logic_vector((((DATA_WIDTH-1)-0)+1)-1 downto 0)        := (others => 'X'); -- tdata
			snk_valid          : in  std_logic                                                  := 'X';             -- tvalid
			snk_ready          : out std_logic;                                                                     -- tready
			snk_command_data   : in  std_logic_vector(95 downto 0)                              := (others => 'X'); -- tdata
			snk_command_valid  : in  std_logic                                                  := 'X';             -- tvalid
			snk_command_ready  : out std_logic;                                                                     -- tready
			master_address     : out std_logic_vector((((ADDRESS_WIDTH-1)-0)+1)-1 downto 0);                        -- address
			master_write       : out std_logic;                                                                     -- write
			master_writedata   : out std_logic_vector((((DATA_WIDTH-1)-0)+1)-1 downto 0);                           -- writedata
			master_burstcount  : out std_logic_vector((((BURST_WIDTH-1)-0)+1)-1 downto 0);                          -- burstcount
			master_byteenable  : out std_logic_vector((((BYTE_ENABLE_WIDTH-1)-0)+1)-1 downto 0);                    -- byteenable
			master_waitrequest : in  std_logic                                                  := 'X'              -- waitrequest
		);
	end component qsys_top_pattern_writer_0;

