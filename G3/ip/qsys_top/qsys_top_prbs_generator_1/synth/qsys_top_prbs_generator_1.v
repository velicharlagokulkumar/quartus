// qsys_top_prbs_generator_1.v

// Generated using ACDS version 22.4 94

`timescale 1 ps / 1 ps
module qsys_top_prbs_generator_1 #(
		parameter DATA_WIDTH = 32
	) (
		input  wire                              clk,            //      clock.clk
		input  wire                              reset,          //      reset.reset
		input  wire [2:0]                        csr_address,    //        csr.address
		input  wire [31:0]                       csr_writedata,  //           .writedata
		input  wire                              csr_write,      //           .write
		output wire [31:0]                       csr_readdata,   //           .readdata
		input  wire                              csr_read,       //           .read
		input  wire [3:0]                        csr_byteenable, //           .byteenable
		output wire [(((DATA_WIDTH-1)-0)+1)-1:0] src_data,       // src_master.tdata
		output wire                              src_valid,      //           .tvalid
		input  wire                              src_ready       //           .tready
	);

	prbs_pattern_generator #(
		.DATA_WIDTH (DATA_WIDTH)
	) prbs_generator_1 (
		.clk            (clk),            //   input,                       width = 1,      clock.clk
		.reset          (reset),          //   input,                       width = 1,      reset.reset
		.csr_address    (csr_address),    //   input,                       width = 3,        csr.address
		.csr_writedata  (csr_writedata),  //   input,                      width = 32,           .writedata
		.csr_write      (csr_write),      //   input,                       width = 1,           .write
		.csr_readdata   (csr_readdata),   //  output,                      width = 32,           .readdata
		.csr_read       (csr_read),       //   input,                       width = 1,           .read
		.csr_byteenable (csr_byteenable), //   input,                       width = 4,           .byteenable
		.src_data       (src_data),       //  output,  width = (((DATA_WIDTH-1)-0)+1), src_master.tdata
		.src_valid      (src_valid),      //  output,                       width = 1,           .tvalid
		.src_ready      (src_ready)       //   input,                       width = 1,           .tready
	);

endmodule
