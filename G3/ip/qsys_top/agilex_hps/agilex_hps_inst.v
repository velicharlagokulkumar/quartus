	agilex_hps u0 (
		.s2f_user_clk0_hio    (_connected_to_s2f_user_clk0_hio_),    //  output,     width = 1, h2f_user0_clock.clk
		.s2f_user_clk1_hio    (_connected_to_s2f_user_clk1_hio_),    //  output,     width = 1, h2f_user1_clock.clk
		.hps_emif_emif_to_hps (_connected_to_hps_emif_emif_to_hps_), //   input,  width = 4096,        hps_emif.emif_to_hps
		.hps_emif_hps_to_emif (_connected_to_hps_emif_hps_to_emif_), //  output,  width = 4096,                .hps_to_emif
		.hps_emif_emif_to_gp  (_connected_to_hps_emif_emif_to_gp_),  //   input,     width = 1,                .emif_to_gp
		.hps_emif_gp_to_emif  (_connected_to_hps_emif_gp_to_emif_),  //  output,     width = 2,                .gp_to_emif
		.EMAC1_TX_CLK         (_connected_to_EMAC1_TX_CLK_),         //  output,     width = 1,          hps_io.EMAC1_TX_CLK
		.EMAC1_TXD0           (_connected_to_EMAC1_TXD0_),           //  output,     width = 1,                .EMAC1_TXD0
		.EMAC1_TXD1           (_connected_to_EMAC1_TXD1_),           //  output,     width = 1,                .EMAC1_TXD1
		.EMAC1_TXD2           (_connected_to_EMAC1_TXD2_),           //  output,     width = 1,                .EMAC1_TXD2
		.EMAC1_TXD3           (_connected_to_EMAC1_TXD3_),           //  output,     width = 1,                .EMAC1_TXD3
		.EMAC1_RX_CTL         (_connected_to_EMAC1_RX_CTL_),         //   input,     width = 1,                .EMAC1_RX_CTL
		.EMAC1_TX_CTL         (_connected_to_EMAC1_TX_CTL_),         //  output,     width = 1,                .EMAC1_TX_CTL
		.EMAC1_RX_CLK         (_connected_to_EMAC1_RX_CLK_),         //   input,     width = 1,                .EMAC1_RX_CLK
		.EMAC1_RXD0           (_connected_to_EMAC1_RXD0_),           //   input,     width = 1,                .EMAC1_RXD0
		.EMAC1_RXD1           (_connected_to_EMAC1_RXD1_),           //   input,     width = 1,                .EMAC1_RXD1
		.EMAC1_RXD2           (_connected_to_EMAC1_RXD2_),           //   input,     width = 1,                .EMAC1_RXD2
		.EMAC1_RXD3           (_connected_to_EMAC1_RXD3_),           //   input,     width = 1,                .EMAC1_RXD3
		.EMAC1_MDIO           (_connected_to_EMAC1_MDIO_),           //   inout,     width = 1,                .EMAC1_MDIO
		.EMAC1_MDC            (_connected_to_EMAC1_MDC_),            //  output,     width = 1,                .EMAC1_MDC
		.SDMMC_CMD            (_connected_to_SDMMC_CMD_),            //   inout,     width = 1,                .SDMMC_CMD
		.SDMMC_D0             (_connected_to_SDMMC_D0_),             //   inout,     width = 1,                .SDMMC_D0
		.SDMMC_D1             (_connected_to_SDMMC_D1_),             //   inout,     width = 1,                .SDMMC_D1
		.SDMMC_D2             (_connected_to_SDMMC_D2_),             //   inout,     width = 1,                .SDMMC_D2
		.SDMMC_D3             (_connected_to_SDMMC_D3_),             //   inout,     width = 1,                .SDMMC_D3
		.SDMMC_D4             (_connected_to_SDMMC_D4_),             //   inout,     width = 1,                .SDMMC_D4
		.SDMMC_D5             (_connected_to_SDMMC_D5_),             //   inout,     width = 1,                .SDMMC_D5
		.SDMMC_D6             (_connected_to_SDMMC_D6_),             //   inout,     width = 1,                .SDMMC_D6
		.SDMMC_D7             (_connected_to_SDMMC_D7_),             //   inout,     width = 1,                .SDMMC_D7
		.SDMMC_CCLK           (_connected_to_SDMMC_CCLK_),           //  output,     width = 1,                .SDMMC_CCLK
		.SPIM0_CLK            (_connected_to_SPIM0_CLK_),            //  output,     width = 1,                .SPIM0_CLK
		.SPIM0_MOSI           (_connected_to_SPIM0_MOSI_),           //  output,     width = 1,                .SPIM0_MOSI
		.SPIM0_MISO           (_connected_to_SPIM0_MISO_),           //   input,     width = 1,                .SPIM0_MISO
		.SPIM0_SS0_N          (_connected_to_SPIM0_SS0_N_),          //  output,     width = 1,                .SPIM0_SS0_N
		.SPIM1_CLK            (_connected_to_SPIM1_CLK_),            //  output,     width = 1,                .SPIM1_CLK
		.SPIM1_MOSI           (_connected_to_SPIM1_MOSI_),           //  output,     width = 1,                .SPIM1_MOSI
		.SPIM1_MISO           (_connected_to_SPIM1_MISO_),           //   input,     width = 1,                .SPIM1_MISO
		.SPIM1_SS0_N          (_connected_to_SPIM1_SS0_N_),          //  output,     width = 1,                .SPIM1_SS0_N
		.SPIM1_SS1_N          (_connected_to_SPIM1_SS1_N_),          //  output,     width = 1,                .SPIM1_SS1_N
		.UART1_RX             (_connected_to_UART1_RX_),             //   input,     width = 1,                .UART1_RX
		.UART1_TX             (_connected_to_UART1_TX_),             //  output,     width = 1,                .UART1_TX
		.I2C1_SDA             (_connected_to_I2C1_SDA_),             //   inout,     width = 1,                .I2C1_SDA
		.I2C1_SCL             (_connected_to_I2C1_SCL_),             //   inout,     width = 1,                .I2C1_SCL
		.hps_osc_clk          (_connected_to_hps_osc_clk_),          //   input,     width = 1,                .hps_osc_clk
		.gpio0_io11           (_connected_to_gpio0_io11_),           //   inout,     width = 1,                .gpio0_io11
		.gpio0_io12           (_connected_to_gpio0_io12_),           //   inout,     width = 1,                .gpio0_io12
		.gpio0_io13           (_connected_to_gpio0_io13_),           //   inout,     width = 1,                .gpio0_io13
		.gpio0_io14           (_connected_to_gpio0_io14_),           //   inout,     width = 1,                .gpio0_io14
		.gpio0_io15           (_connected_to_gpio0_io15_),           //   inout,     width = 1,                .gpio0_io15
		.gpio0_io16           (_connected_to_gpio0_io16_),           //   inout,     width = 1,                .gpio0_io16
		.gpio0_io17           (_connected_to_gpio0_io17_),           //   inout,     width = 1,                .gpio0_io17
		.gpio0_io18           (_connected_to_gpio0_io18_),           //   inout,     width = 1,                .gpio0_io18
		.gpio1_io16           (_connected_to_gpio1_io16_),           //   inout,     width = 1,                .gpio1_io16
		.gpio1_io17           (_connected_to_gpio1_io17_),           //   inout,     width = 1,                .gpio1_io17
		.h2f_rst              (_connected_to_h2f_rst_),              //  output,     width = 1,       h2f_reset.reset
		.h2f_axi_clk          (_connected_to_h2f_axi_clk_),          //   input,     width = 1,   h2f_axi_clock.clk
		.h2f_axi_rst_n        (_connected_to_h2f_axi_rst_n_),        //   input,     width = 1,   h2f_axi_reset.reset_n
		.h2f_AWID             (_connected_to_h2f_AWID_),             //  output,     width = 4,  h2f_axi_master.awid
		.h2f_AWADDR           (_connected_to_h2f_AWADDR_),           //  output,    width = 32,                .awaddr
		.h2f_AWLEN            (_connected_to_h2f_AWLEN_),            //  output,     width = 8,                .awlen
		.h2f_AWSIZE           (_connected_to_h2f_AWSIZE_),           //  output,     width = 3,                .awsize
		.h2f_AWBURST          (_connected_to_h2f_AWBURST_),          //  output,     width = 2,                .awburst
		.h2f_AWLOCK           (_connected_to_h2f_AWLOCK_),           //  output,     width = 1,                .awlock
		.h2f_AWCACHE          (_connected_to_h2f_AWCACHE_),          //  output,     width = 4,                .awcache
		.h2f_AWPROT           (_connected_to_h2f_AWPROT_),           //  output,     width = 3,                .awprot
		.h2f_AWVALID          (_connected_to_h2f_AWVALID_),          //  output,     width = 1,                .awvalid
		.h2f_AWREADY          (_connected_to_h2f_AWREADY_),          //   input,     width = 1,                .awready
		.h2f_WDATA            (_connected_to_h2f_WDATA_),            //  output,    width = 32,                .wdata
		.h2f_WSTRB            (_connected_to_h2f_WSTRB_),            //  output,     width = 4,                .wstrb
		.h2f_WLAST            (_connected_to_h2f_WLAST_),            //  output,     width = 1,                .wlast
		.h2f_WVALID           (_connected_to_h2f_WVALID_),           //  output,     width = 1,                .wvalid
		.h2f_WREADY           (_connected_to_h2f_WREADY_),           //   input,     width = 1,                .wready
		.h2f_BID              (_connected_to_h2f_BID_),              //   input,     width = 4,                .bid
		.h2f_BRESP            (_connected_to_h2f_BRESP_),            //   input,     width = 2,                .bresp
		.h2f_BVALID           (_connected_to_h2f_BVALID_),           //   input,     width = 1,                .bvalid
		.h2f_BREADY           (_connected_to_h2f_BREADY_),           //  output,     width = 1,                .bready
		.h2f_ARID             (_connected_to_h2f_ARID_),             //  output,     width = 4,                .arid
		.h2f_ARADDR           (_connected_to_h2f_ARADDR_),           //  output,    width = 32,                .araddr
		.h2f_ARLEN            (_connected_to_h2f_ARLEN_),            //  output,     width = 8,                .arlen
		.h2f_ARSIZE           (_connected_to_h2f_ARSIZE_),           //  output,     width = 3,                .arsize
		.h2f_ARBURST          (_connected_to_h2f_ARBURST_),          //  output,     width = 2,                .arburst
		.h2f_ARLOCK           (_connected_to_h2f_ARLOCK_),           //  output,     width = 1,                .arlock
		.h2f_ARCACHE          (_connected_to_h2f_ARCACHE_),          //  output,     width = 4,                .arcache
		.h2f_ARPROT           (_connected_to_h2f_ARPROT_),           //  output,     width = 3,                .arprot
		.h2f_ARVALID          (_connected_to_h2f_ARVALID_),          //  output,     width = 1,                .arvalid
		.h2f_ARREADY          (_connected_to_h2f_ARREADY_),          //   input,     width = 1,                .arready
		.h2f_RID              (_connected_to_h2f_RID_),              //   input,     width = 4,                .rid
		.h2f_RDATA            (_connected_to_h2f_RDATA_),            //   input,    width = 32,                .rdata
		.h2f_RRESP            (_connected_to_h2f_RRESP_),            //   input,     width = 2,                .rresp
		.h2f_RLAST            (_connected_to_h2f_RLAST_),            //   input,     width = 1,                .rlast
		.h2f_RVALID           (_connected_to_h2f_RVALID_),           //   input,     width = 1,                .rvalid
		.h2f_RREADY           (_connected_to_h2f_RREADY_),           //  output,     width = 1,                .rready
		.f2h_axi_clk          (_connected_to_f2h_axi_clk_),          //   input,     width = 1,   f2h_axi_clock.clk
		.f2h_axi_rst_n        (_connected_to_f2h_axi_rst_n_),        //   input,     width = 1,   f2h_axi_reset.reset_n
		.f2h_AWID             (_connected_to_f2h_AWID_),             //   input,     width = 5,   f2h_axi_slave.awid
		.f2h_AWADDR           (_connected_to_f2h_AWADDR_),           //   input,    width = 32,                .awaddr
		.f2h_AWLEN            (_connected_to_f2h_AWLEN_),            //   input,     width = 8,                .awlen
		.f2h_AWSIZE           (_connected_to_f2h_AWSIZE_),           //   input,     width = 3,                .awsize
		.f2h_AWBURST          (_connected_to_f2h_AWBURST_),          //   input,     width = 2,                .awburst
		.f2h_AWLOCK           (_connected_to_f2h_AWLOCK_),           //   input,     width = 1,                .awlock
		.f2h_AWCACHE          (_connected_to_f2h_AWCACHE_),          //   input,     width = 4,                .awcache
		.f2h_AWPROT           (_connected_to_f2h_AWPROT_),           //   input,     width = 3,                .awprot
		.f2h_AWVALID          (_connected_to_f2h_AWVALID_),          //   input,     width = 1,                .awvalid
		.f2h_AWREADY          (_connected_to_f2h_AWREADY_),          //  output,     width = 1,                .awready
		.f2h_AWQOS            (_connected_to_f2h_AWQOS_),            //   input,     width = 4,                .awqos
		.f2h_WDATA            (_connected_to_f2h_WDATA_),            //   input,   width = 512,                .wdata
		.f2h_WSTRB            (_connected_to_f2h_WSTRB_),            //   input,    width = 64,                .wstrb
		.f2h_WLAST            (_connected_to_f2h_WLAST_),            //   input,     width = 1,                .wlast
		.f2h_WVALID           (_connected_to_f2h_WVALID_),           //   input,     width = 1,                .wvalid
		.f2h_WREADY           (_connected_to_f2h_WREADY_),           //  output,     width = 1,                .wready
		.f2h_BID              (_connected_to_f2h_BID_),              //  output,     width = 5,                .bid
		.f2h_BRESP            (_connected_to_f2h_BRESP_),            //  output,     width = 2,                .bresp
		.f2h_BVALID           (_connected_to_f2h_BVALID_),           //  output,     width = 1,                .bvalid
		.f2h_BREADY           (_connected_to_f2h_BREADY_),           //   input,     width = 1,                .bready
		.f2h_ARID             (_connected_to_f2h_ARID_),             //   input,     width = 5,                .arid
		.f2h_ARADDR           (_connected_to_f2h_ARADDR_),           //   input,    width = 32,                .araddr
		.f2h_ARLEN            (_connected_to_f2h_ARLEN_),            //   input,     width = 8,                .arlen
		.f2h_ARSIZE           (_connected_to_f2h_ARSIZE_),           //   input,     width = 3,                .arsize
		.f2h_ARBURST          (_connected_to_f2h_ARBURST_),          //   input,     width = 2,                .arburst
		.f2h_ARLOCK           (_connected_to_f2h_ARLOCK_),           //   input,     width = 1,                .arlock
		.f2h_ARCACHE          (_connected_to_f2h_ARCACHE_),          //   input,     width = 4,                .arcache
		.f2h_ARPROT           (_connected_to_f2h_ARPROT_),           //   input,     width = 3,                .arprot
		.f2h_ARVALID          (_connected_to_f2h_ARVALID_),          //   input,     width = 1,                .arvalid
		.f2h_ARREADY          (_connected_to_f2h_ARREADY_),          //  output,     width = 1,                .arready
		.f2h_ARQOS            (_connected_to_f2h_ARQOS_),            //   input,     width = 4,                .arqos
		.f2h_RID              (_connected_to_f2h_RID_),              //  output,     width = 5,                .rid
		.f2h_RDATA            (_connected_to_f2h_RDATA_),            //  output,   width = 512,                .rdata
		.f2h_RRESP            (_connected_to_f2h_RRESP_),            //  output,     width = 2,                .rresp
		.f2h_RLAST            (_connected_to_f2h_RLAST_),            //  output,     width = 1,                .rlast
		.f2h_RVALID           (_connected_to_f2h_RVALID_),           //  output,     width = 1,                .rvalid
		.f2h_RREADY           (_connected_to_f2h_RREADY_),           //   input,     width = 1,                .rready
		.f2h_ARUSER           (_connected_to_f2h_ARUSER_),           //   input,    width = 23,                .aruser
		.f2h_AWUSER           (_connected_to_f2h_AWUSER_),           //   input,    width = 23,                .awuser
		.f2h_irq_p0           (_connected_to_f2h_irq_p0_),           //   input,    width = 32,        f2h_irq0.irq
		.f2h_irq_p1           (_connected_to_f2h_irq_p1_)            //   input,    width = 32,        f2h_irq1.irq
	);

