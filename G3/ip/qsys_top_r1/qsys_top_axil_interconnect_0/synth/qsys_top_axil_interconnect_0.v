// qsys_top_axil_interconnect_0.v

// Generated using ACDS version 22.4 94

`timescale 1 ps / 1 ps
module qsys_top_axil_interconnect_0 #(
		parameter S_COUNT         = 1,
		parameter M_COUNT         = 2,
		parameter DATA_WIDTH      = 32,
		parameter ADDR_WIDTH      = 12,
		parameter STRB_WIDTH      = 4,
		parameter M_REGIONS       = 1,
		parameter M_BASE_ADDR     = 0,
		parameter M_ADDR_WIDTH    = 0,
		parameter M_CONNECT_READ  = 0,
		parameter M_CONNECT_WRITE = 0,
		parameter M_SECURE        = 0
	) (
		input  wire        clk,            //                  clock.clk
		input  wire        rst,            //             reset_sink.reset
		input  wire [2:0]  s_axil_awprot,  //  altera_axi4lite_slave.awprot
		input  wire [31:0] s_axil_awaddr,  //                       .awaddr
		input  wire [0:0]  s_axil_awvalid, //                       .awvalid
		output wire [0:0]  s_axil_awready, //                       .awready
		input  wire [31:0] s_axil_wdata,   //                       .wdata
		input  wire [3:0]  s_axil_wstrb,   //                       .wstrb
		input  wire [0:0]  s_axil_wvalid,  //                       .wvalid
		output wire [0:0]  s_axil_wready,  //                       .wready
		output wire [1:0]  s_axil_bresp,   //                       .bresp
		output wire [0:0]  s_axil_bvalid,  //                       .bvalid
		input  wire [0:0]  s_axil_bready,  //                       .bready
		input  wire [31:0] s_axil_araddr,  //                       .araddr
		input  wire [2:0]  s_axil_arprot,  //                       .arprot
		input  wire [0:0]  s_axil_arvalid, //                       .arvalid
		output wire [0:0]  s_axil_arready, //                       .arready
		output wire [31:0] s_axil_rdata,   //                       .rdata
		output wire [1:0]  s_axil_rresp,   //                       .rresp
		output wire [0:0]  s_axil_rvalid,  //                       .rvalid
		input  wire [0:0]  s_axil_rready,  //                       .rready
		output wire        m_axil_bready,  // altera_axi4lite_master.bready
		output wire [31:0] m_axil_araddr,  //                       .araddr
		output wire [2:0]  m_axil_arprot,  //                       .arprot
		output wire        m_axil_arvalid, //                       .arvalid
		input  wire        m_axil_arready, //                       .arready
		input  wire [31:0] m_axil_rdata,   //                       .rdata
		input  wire [1:0]  m_axil_rresp,   //                       .rresp
		input  wire        m_axil_rvalid,  //                       .rvalid
		output wire        m_axil_rready,  //                       .rready
		output wire [31:0] m_axil_awaddr,  //                       .awaddr
		output wire [2:0]  m_axil_awprot,  //                       .awprot
		output wire        m_axil_awvalid, //                       .awvalid
		input  wire        m_axil_awready, //                       .awready
		output wire [31:0] m_axil_wdata,   //                       .wdata
		output wire [3:0]  m_axil_wstrb,   //                       .wstrb
		output wire        m_axil_wvalid,  //                       .wvalid
		input  wire        m_axil_wready,  //                       .wready
		input  wire [1:0]  m_axil_bresp,   //                       .bresp
		input  wire        m_axil_bvalid   //                       .bvalid
	);

	axil_interconnect #(
		.S_COUNT         (S_COUNT),
		.M_COUNT         (M_COUNT),
		.DATA_WIDTH      (DATA_WIDTH),
		.ADDR_WIDTH      (ADDR_WIDTH),
		.STRB_WIDTH      (STRB_WIDTH),
		.M_REGIONS       (M_REGIONS),
		.M_BASE_ADDR     (M_BASE_ADDR),
		.M_ADDR_WIDTH    (M_ADDR_WIDTH),
		.M_CONNECT_READ  (M_CONNECT_READ),
		.M_CONNECT_WRITE (M_CONNECT_WRITE),
		.M_SECURE        (M_SECURE)
	) axil_interconnect_0 (
		.clk            (clk),            //   input,   width = 1,                  clock.clk
		.rst            (rst),            //   input,   width = 1,             reset_sink.reset
		.s_axil_awprot  (s_axil_awprot),  //   input,   width = 3,  altera_axi4lite_slave.awprot
		.s_axil_awaddr  (s_axil_awaddr),  //   input,  width = 32,                       .awaddr
		.s_axil_awvalid (s_axil_awvalid), //   input,   width = 1,                       .awvalid
		.s_axil_awready (s_axil_awready), //  output,   width = 1,                       .awready
		.s_axil_wdata   (s_axil_wdata),   //   input,  width = 32,                       .wdata
		.s_axil_wstrb   (s_axil_wstrb),   //   input,   width = 4,                       .wstrb
		.s_axil_wvalid  (s_axil_wvalid),  //   input,   width = 1,                       .wvalid
		.s_axil_wready  (s_axil_wready),  //  output,   width = 1,                       .wready
		.s_axil_bresp   (s_axil_bresp),   //  output,   width = 2,                       .bresp
		.s_axil_bvalid  (s_axil_bvalid),  //  output,   width = 1,                       .bvalid
		.s_axil_bready  (s_axil_bready),  //   input,   width = 1,                       .bready
		.s_axil_araddr  (s_axil_araddr),  //   input,  width = 32,                       .araddr
		.s_axil_arprot  (s_axil_arprot),  //   input,   width = 3,                       .arprot
		.s_axil_arvalid (s_axil_arvalid), //   input,   width = 1,                       .arvalid
		.s_axil_arready (s_axil_arready), //  output,   width = 1,                       .arready
		.s_axil_rdata   (s_axil_rdata),   //  output,  width = 32,                       .rdata
		.s_axil_rresp   (s_axil_rresp),   //  output,   width = 2,                       .rresp
		.s_axil_rvalid  (s_axil_rvalid),  //  output,   width = 1,                       .rvalid
		.s_axil_rready  (s_axil_rready),  //   input,   width = 1,                       .rready
		.m_axil_bready  (m_axil_bready),  //  output,   width = 1, altera_axi4lite_master.bready
		.m_axil_araddr  (m_axil_araddr),  //  output,  width = 32,                       .araddr
		.m_axil_arprot  (m_axil_arprot),  //  output,   width = 3,                       .arprot
		.m_axil_arvalid (m_axil_arvalid), //  output,   width = 1,                       .arvalid
		.m_axil_arready (m_axil_arready), //   input,   width = 1,                       .arready
		.m_axil_rdata   (m_axil_rdata),   //   input,  width = 32,                       .rdata
		.m_axil_rresp   (m_axil_rresp),   //   input,   width = 2,                       .rresp
		.m_axil_rvalid  (m_axil_rvalid),  //   input,   width = 1,                       .rvalid
		.m_axil_rready  (m_axil_rready),  //  output,   width = 1,                       .rready
		.m_axil_awaddr  (m_axil_awaddr),  //  output,  width = 32,                       .awaddr
		.m_axil_awprot  (m_axil_awprot),  //  output,   width = 3,                       .awprot
		.m_axil_awvalid (m_axil_awvalid), //  output,   width = 1,                       .awvalid
		.m_axil_awready (m_axil_awready), //   input,   width = 1,                       .awready
		.m_axil_wdata   (m_axil_wdata),   //  output,  width = 32,                       .wdata
		.m_axil_wstrb   (m_axil_wstrb),   //  output,   width = 4,                       .wstrb
		.m_axil_wvalid  (m_axil_wvalid),  //  output,   width = 1,                       .wvalid
		.m_axil_wready  (m_axil_wready),  //   input,   width = 1,                       .wready
		.m_axil_bresp   (m_axil_bresp),   //   input,   width = 2,                       .bresp
		.m_axil_bvalid  (m_axil_bvalid)   //   input,   width = 1,                       .bvalid
	);

endmodule
