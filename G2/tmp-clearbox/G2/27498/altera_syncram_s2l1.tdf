--altera_syncram ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES="CARE" ADDRESS_ACLR_A="NONE" CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" CBX_SINGLE_OUTPUT_FILE="OFF" CLOCK_ENABLE_INPUT_A="BYPASS" CLOCK_ENABLE_OUTPUT_A="BYPASS" DEVICE_FAMILY="Agilex" ENABLE_FORCE_TO_ZERO="FALSE" INIT_FILE="/home/bluefalcon/Videos/G2/mem.mif" LOW_POWER_MODE="AUTO" NUMWORDS_A=1024 OPERATION_MODE="ROM" OUTDATA_ACLR_A="NONE" OUTDATA_REG_A="CLOCK0" OUTDATA_SCLR_A="NONE" WIDTH_A=32 WIDTH_BYTEENA_A=1 WIDTHAD_A=10 address_a clock0 q_a CARRY_CHAIN="MANUAL" CYCLONEII_M4K_COMPATIBILITY="ON"
--VERSION_BEGIN 22.4 cbx_altera_syncram 2022:11:23:20:36:22:SC cbx_altera_syncram_nd_impl 2022:11:23:20:36:22:SC cbx_altsyncram 2022:11:23:20:36:22:SC cbx_lpm_add_sub 2022:11:23:20:36:22:SC cbx_lpm_compare 2022:11:23:20:36:22:SC cbx_lpm_decode 2022:11:23:20:36:22:SC cbx_lpm_mux 2022:11:23:20:36:22:SC cbx_mgl 2022:11:23:20:36:26:SC cbx_nadder 2022:11:23:20:36:22:SC cbx_stratix 2022:11:23:20:36:22:SC cbx_stratixii 2022:11:23:20:36:22:SC cbx_stratixiii 2022:11:23:20:36:22:SC cbx_stratixv 2022:11:23:20:36:22:SC cbx_util_mgl 2022:11:23:20:36:22:SC  VERSION_END


-- Copyright (C) 2022  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.


FUNCTION altera_syncram_impl_f6i4 (address_a[9..0], clock0)
RETURNS ( q_a[31..0]);

--synthesis_resources = ram_bits (AUTO) 32768 
SUBDESIGN altera_syncram_s2l1
( 
	address_a[9..0]	:	input;
	clock0	:	input;
	q_a[31..0]	:	output;
) 
VARIABLE 
	altera_syncram_impl1 : altera_syncram_impl_f6i4;

BEGIN 
	altera_syncram_impl1.address_a[] = address_a[];
	altera_syncram_impl1.clock0 = clock0;
	q_a[] = altera_syncram_impl1.q_a[];
END;
--VALID FILE
